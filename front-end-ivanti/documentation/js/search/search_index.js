var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ApiService.html",[0,0.98,1,1.858]],["body/injectables/ApiService.html",[0,1.26,1,2.391,2,1.524,3,0.362,4,0.312,5,0.312,6,2.279,7,0.415,8,0.741,9,2.643,10,2.123,11,3.857,12,3.857,13,3.857,14,3.857,15,3.857,16,3.857,17,3.857,18,1.709,19,2.145,20,2.768,21,2.576,22,0.04,23,0.891,24,1.252,25,2.317,26,4.305,27,2.878,28,3.713,29,3.857,30,4.505,31,2.768,32,3.012,33,3.392,34,3.953,35,1.051,36,4.056,37,1.333,38,1.788,39,3.857,40,2.768,41,1.569,42,3.857,43,2.768,44,3.953,45,3.857,46,2.768,47,3.857,48,2.768,49,1.227,50,1,51,3.857,52,2.768,53,0.758,54,1.227,55,0.738,56,1.957,57,0.175,58,1.364,59,2.768,60,2.279,61,2.279,62,2.279,63,2.768,64,1.957,65,1.524,66,1.364,67,0.362,68,0.817,69,2.495,70,3.857,71,3.857,72,2.366,73,2.768,74,2.768,75,0.025,76,0.025]],["title/components/AppComponent.html",[77,0.799,78,1.329]],["body/components/AppComponent.html",[3,0.493,4,0.424,5,0.424,22,0.039,23,0.881,35,0.723,53,0.839,55,1.004,66,2.331,67,0.493,68,1.112,75,0.031,76,0.031,77,1.378,78,2.404,79,2.331,80,2.073,81,2.073,82,2.073,83,3.101,84,1.856,85,3.895,86,2.548,87,2.885,88,3.187,89,2.604,90,5.172,91,5.172,92,2.404,93,2.404,94,2.604,95,4.731,96,2.604,97,4.731,98,2.073,99,3.767,100,2.662,101,3.767,102,2.073,103,2.604,104,2.331,105,1.361,106,2.987,107,2.073,108,2.073,109,2.073,110,2.073,111,1.669,112,2.073,113,1.669,114,0.81,115,1.856,116,1.506,117,1.856,118,2.073]],["title/injectables/BaseApiService.html",[0,0.98,9,1.65]],["body/injectables/BaseApiService.html",[0,0.786,2,0.816,3,0.194,4,0.167,5,0.167,7,0.223,8,0.462,9,1.324,10,1.324,18,1.884,19,1.996,21,2.973,22,0.04,23,0.815,24,1.029,25,2.402,27,2.564,28,3.585,32,2.96,33,2.164,36,2.145,38,0.786,49,1.066,50,1.096,53,0.455,54,0.657,55,0.395,57,0.22,58,0.731,65,0.816,66,0.731,67,0.315,68,0.438,69,2.42,72,2.755,75,0.016,76,0.016,119,3.588,120,1.048,121,2.873,122,2.498,123,2.498,124,2.498,125,3.158,126,3.385,127,2.873,128,2.405,129,2.405,130,2.405,131,2.873,132,2.405,133,2.873,134,2.405,135,1.495,136,2.405,137,1.98,138,3.499,139,1.483,140,4.343,141,4.906,142,2.873,143,2.904,144,0.985,145,3.953,146,3.71,147,4.685,148,5.075,149,3.383,150,4.343,151,1.943,152,1.98,153,1.483,154,1.98,155,1.483,156,1.98,157,1.483,158,1.98,159,1.483,160,1.98,161,3.158,162,1.98,163,1.221,164,1.98,165,4.022,166,1.483,167,2.873,168,1.98,169,1.483,170,1.98,171,1.483,172,2.873,173,1.98,174,1.483,175,2.498,176,1.98,177,1.483,178,1.7,179,1.98,180,0.816,181,1.221,182,1.048,183,1.221,184,1.221,185,1.221,186,0.536,187,0.593,188,1.221,189,1.221,190,1.221,191,1.98,192,0.869,193,1.221,194,2.873,195,1.221,196,2.873,197,1.921,198,1.98,199,2.873,200,2.873,201,2.873,202,1.221,203,1.221,204,1.221,205,1.221,206,1.221,207,1.221,208,1.221,209,1.221,210,1.221,211,1.221,212,1.221,213,1.221,214,1.221,215,1.221]],["title/interfaces/CardInterface.html",[57,0.189,216,0.885]],["body/interfaces/CardInterface.html",[3,0.498,4,0.428,5,0.428,7,0.571,8,0.914,18,1.917,22,0.038,24,1.171,25,2.571,26,4.615,57,0.3,67,0.498,75,0.031,76,0.031,77,1.013,114,0.818,144,0.912,149,2.689,165,3.962,192,2.026,216,1.534,217,1.375,218,3.131,219,1.521,220,3.804,221,3.804,222,3.131,223,2.534,224,5.802,225,3.919,226,3.804,227,3.804,228,3.804,229,2.689,230,3.131,231,3.804,232,3.804,233,1.917,234,2.242,235,1.686,236,1.375,237,2.951,238,3.804,239,3.804,240,3.804,241,3.804,242,1.243,243,3.804]],["title/injectables/DataUserService.html",[0,0.98,244,1.858]],["body/injectables/DataUserService.html",[0,1.484,2,1.945,3,0.462,4,0.398,5,0.398,7,0.53,10,2.5,19,1.816,21,1.74,22,0.04,23,0.602,24,0.76,25,1.565,27,2.763,32,2.5,35,1.077,37,1.369,38,1.731,41,1.865,53,0.753,55,0.941,56,2.497,57,0.286,65,1.945,66,1.74,67,0.462,68,1.043,69,2.348,72,2.473,75,0.029,76,0.029,114,1.14,135,2.473,143,3.018,216,1.565,233,1.64,234,1.816,242,1.833,244,2.816,245,4.133,246,2.908,247,4.542,248,3.532,249,4.542,250,3.746,251,3.532,252,3.739,253,2.816,254,4.542,255,3.739,256,2.908,257,3.532,258,4.542,259,3.532,260,3.532]],["title/components/FooterComponent.html",[77,0.799,93,1.329]],["body/components/FooterComponent.html",[3,0.469,4,0.404,5,0.404,22,0.04,23,0.861,35,0.688,53,0.538,55,0.955,67,0.469,68,1.059,75,0.03,76,0.03,77,1.467,78,1.589,79,2.259,80,1.973,81,1.973,82,1.973,84,1.766,87,2.857,88,3.152,89,1.973,92,1.589,93,2.496,94,2.524,96,2.524,102,1.973,103,2.524,104,2.259,105,1.296,106,2.933,107,1.973,108,1.973,109,1.973,110,1.973,111,1.589,112,1.973,113,1.589,114,0.771,115,1.766,116,1.433,117,1.766,118,1.973,144,0.86,225,3.775,237,2.842,261,2.951,262,4.585,263,2.032,264,5.632,265,3.775,266,4.585,267,4.585,268,2.032,269,4.585,270,4.585,271,4.585,272,3.585,273,4.585,274,2.032,275,4.585,276,4.585,277,4.585,278,4.585,279,4.585,280,3.775,281,4.585]],["title/components/HeaderComponent.html",[77,0.799,92,1.329]],["body/components/HeaderComponent.html",[3,0.472,4,0.407,5,0.407,7,0.542,8,0.885,19,1.444,22,0.04,23,0.864,35,0.693,49,1.601,50,1.305,53,0.828,54,1.601,55,0.962,67,0.472,68,1.066,75,0.03,76,0.03,77,1.352,78,1.601,79,2.27,80,1.988,81,1.988,82,1.988,84,1.779,86,1.779,87,2.861,88,3.157,89,2.536,92,2.368,93,1.601,94,2.536,96,2.536,98,1.988,100,2.553,102,1.988,103,2.536,104,2.27,105,1.305,106,2.941,107,1.988,108,1.988,109,1.988,110,1.988,111,1.601,112,1.988,113,1.601,114,0.777,115,1.779,116,2.136,117,1.779,118,1.988,282,2.973,283,4.607,284,5.073,285,5.073,286,4.607,287,4.607,288,5.073,289,3.793,290,3.612,291,3.612,292,3.612,293,2.973,294,3.612,295,3.793,296,4.607,297,4.607,298,4.607]],["title/interfaces/IRequestParameters.html",[57,0.189,138,1.858]],["body/interfaces/IRequestParameters.html",[0,1.013,3,0.268,4,0.231,5,0.231,9,1.128,18,1.871,19,0.819,21,2.945,22,0.041,23,0.349,25,1.984,28,3.508,32,2.837,33,1.921,36,2.946,38,1.222,50,0.741,53,0.561,54,0.908,55,0.546,57,0.297,58,1.01,65,1.128,66,1.01,67,0.405,68,0.605,69,2.55,72,2.89,75,0.02,76,0.02,119,2.191,120,1.449,121,2.552,122,1.687,123,1.687,124,1.687,125,2.552,126,3.257,127,1.687,131,1.687,133,1.687,135,1.01,137,1.687,138,3.309,140,4.145,141,4.843,142,2.552,143,2.772,144,0.491,145,3.825,146,3.431,147,4.627,149,3.164,150,4.145,151,1.863,152,1.687,154,1.687,156,1.687,158,1.687,160,1.687,161,3.078,162,1.687,164,1.687,165,3.973,167,2.552,168,1.687,170,1.687,172,2.552,173,1.687,175,2.552,176,1.687,178,1.449,179,1.687,180,1.128,181,1.687,182,1.449,183,1.687,184,1.687,185,1.687,186,1.12,187,1.239,188,2.552,189,2.552,190,2.552,191,3.078,192,1.12,193,1.687,194,3.431,195,1.687,196,3.431,197,2.294,198,2.552,199,3.431,200,3.431,201,3.431,202,1.687,203,1.687,204,1.687,205,1.687,206,1.687,207,1.687,208,1.687,209,1.687,210,1.687,211,1.687,212,1.687,213,1.687,214,1.687,215,1.687,217,0.741,299,2.049,300,2.049]],["title/components/MainComponent.html",[77,0.799,111,1.329]],["body/components/MainComponent.html",[3,0.501,4,0.432,5,0.432,22,0.039,23,0.888,35,0.736,53,0.575,55,1.021,67,0.501,68,1.132,75,0.031,76,0.031,77,1.389,78,1.699,79,2.357,80,2.11,81,2.11,82,2.11,84,1.889,87,2.895,88,3.199,89,2.11,92,1.699,93,1.699,94,2.633,96,2.633,102,2.11,103,2.633,104,2.357,105,1.385,106,3.006,107,2.11,108,2.11,109,2.11,110,2.11,111,2.42,112,2.11,113,1.699,114,0.825,115,1.889,116,1.533,117,1.889,118,2.11,229,3.381,301,3.156,302,4.784,303,4.784,304,4.784,305,4.784,306,4.784,307,4.784,308,4.784,309,4.784,310,4.784,311,4.784,312,4.784]],["title/directives/NavigationLinkDirective.html",[105,1.083,116,1.199]],["body/directives/NavigationLinkDirective.html",[3,0.439,4,0.378,5,0.378,7,0.503,8,0.843,19,1.958,22,0.04,24,0.722,49,1.946,50,1.587,53,0.503,54,1.946,55,0.894,67,0.439,68,1.592,75,0.028,76,0.028,84,1.653,87,2.164,104,2.413,105,1.878,115,1.653,116,1.756,117,2.164,126,3.221,135,2.726,144,1.4,180,2.418,230,4.555,237,2.723,255,3.616,295,4.641,313,4.277,314,2.762,315,4.392,316,5.196,317,4.897,318,4.392,319,4.392,320,4.392,321,3.673,322,3.616,323,5.196,324,3.616,325,4.392,326,4.392,327,3.355,328,4.392,329,4.392,330,4.392,331,4.392,332,4.392,333,4.392,334,4.392,335,4.897,336,4.392,337,3.355,338,3.355,339,3.355,340,3.355,341,3.355,342,3.355]],["title/interfaces/UserAddressGeoInterface.html",[57,0.189,343,1.199]],["body/interfaces/UserAddressGeoInterface.html",[3,0.318,4,0.273,5,0.273,7,0.364,8,0.675,18,1.978,22,0.04,23,0.853,24,0.756,35,1.051,37,1.152,38,0.793,41,0.793,53,0.364,57,0.378,67,0.655,75,0.023,76,0.023,114,1.077,144,0.843,151,1.27,186,1.866,187,2.065,192,2.153,216,1.038,217,0.877,219,0.971,223,1.076,233,1.848,234,1.405,235,1.076,236,0.877,242,1.906,263,1.557,268,1.076,274,2.289,343,1.921,344,1.076,345,2.828,346,2.467,347,2.467,348,2.467,349,2.366,350,2.366,351,0.877,352,2.035,353,2.035,354,1.921,355,1.731,356,2.035,357,2.035,358,1.921,359,2.035,360,2.035,361,1.196,362,2.035,363,1.196,364,1.731,365,1.196,366,1.196,367,1.196,368,1.196,369,1.196,370,1.196,371,2.035,372,1.731,373,1.196,374,1.196,375,1.076,376,1.405,377,1.196,378,1.196,379,2.035,380,1.81,381,1.076,382,1.731,383,1.196,384,2.006,385,1.405,386,1.148,387,1.651,388,1.148,389,1.651]],["title/interfaces/UserAddressInterface.html",[57,0.189,354,1.199]],["body/interfaces/UserAddressInterface.html",[3,0.31,4,0.267,5,0.267,7,0.356,8,0.663,18,1.985,22,0.04,23,0.846,24,1.023,35,1.045,37,1.141,38,0.775,41,0.775,53,0.356,57,0.378,67,0.65,75,0.022,76,0.022,114,1.068,144,0.828,151,1.248,186,1.853,187,2.05,192,2.148,216,1.02,217,0.857,219,0.948,223,1.051,233,1.84,234,1.381,235,1.051,236,0.857,242,1.9,263,1.531,268,1.051,274,2.272,343,1.986,344,1.051,345,2.817,346,2.526,347,2.447,348,2.447,349,1.702,350,1.702,351,0.857,352,2.007,353,2.007,354,1.986,355,1.702,356,2.007,357,2.007,358,1.903,359,2.447,360,2.447,361,1.168,362,2.447,363,1.168,364,2.344,365,1.168,366,1.168,367,1.168,368,1.168,369,1.168,370,1.168,371,2.007,372,1.702,373,1.168,374,1.168,375,1.051,376,1.381,377,1.168,378,1.168,379,2.007,380,1.79,381,1.051,382,1.702,383,1.168,384,1.984,385,1.381,386,1.129,387,1.629,388,1.129,389,1.629]],["title/interfaces/UserCompanyInterface.html",[57,0.189,358,1.199]],["body/interfaces/UserCompanyInterface.html",[3,0.316,4,0.272,5,0.272,7,0.362,8,0.672,18,1.982,22,0.04,23,0.917,24,0.885,35,1.049,37,1.149,38,0.788,41,0.788,53,0.362,57,0.378,67,0.654,75,0.023,76,0.023,114,1.075,144,0.839,151,1.264,186,1.863,187,2.061,192,2.151,216,1.033,217,0.872,219,0.965,223,1.069,233,1.846,234,1.399,235,1.069,236,0.872,242,1.905,263,1.55,268,1.069,274,2.385,343,1.805,344,1.069,345,2.783,346,2.224,347,2.462,348,2.462,349,1.723,350,1.723,351,0.872,352,2.027,353,2.027,354,1.916,355,1.723,356,2.027,357,2.027,358,1.998,359,2.027,360,2.027,361,1.189,362,2.027,363,1.189,364,1.723,365,1.189,366,1.189,367,1.189,368,1.189,369,1.189,370,1.189,371,2.462,372,2.361,373,1.189,374,1.189,375,1.069,376,1.399,377,1.189,378,1.189,379,2.027,380,1.805,381,1.069,382,1.723,383,1.189,384,2,385,1.399,386,1.143,387,1.645,388,1.143,389,1.645]],["title/interfaces/UserInterface.html",[37,0.719,57,0.189]],["body/interfaces/UserInterface.html",[3,0.301,4,0.259,5,0.259,7,0.345,8,0.648,18,1.985,22,0.04,23,0.906,24,1.143,35,1.038,37,1.178,38,0.751,41,1.441,53,0.345,57,0.376,67,0.642,75,0.022,76,0.022,114,1.056,144,0.81,151,1.22,186,1.835,187,2.03,192,2.14,216,1.302,217,0.83,219,0.919,223,1.018,233,1.859,234,1.879,235,1.018,236,0.83,242,1.901,263,1.496,268,1.018,274,2.395,343,1.763,344,1.018,345,2.821,346,2.173,347,2.315,348,2.42,349,1.663,350,1.663,351,0.83,352,2.42,353,2.42,354,2.03,355,1.663,356,2.42,357,2.42,358,2.03,359,1.971,360,1.971,361,1.132,362,1.971,363,1.132,364,1.663,365,1.132,366,1.132,367,1.132,368,1.132,369,1.132,370,1.132,371,1.971,372,1.663,373,1.132,374,1.132,375,1.018,376,1.35,377,1.132,378,1.132,379,1.971,380,1.763,381,1.018,382,1.663,383,1.132,384,1.954,385,1.35,386,1.103,387,1.6,388,1.103,389,1.6]],["title/interfaces/UserListResponseInterface.html",[57,0.189,376,1.199]],["body/interfaces/UserListResponseInterface.html",[3,0.312,4,0.269,5,0.269,7,0.358,8,0.666,18,1.961,22,0.04,23,0.848,24,0.966,35,1.091,37,1.232,38,0.78,41,0.78,53,0.358,57,0.378,67,0.651,75,0.022,76,0.022,114,1.132,144,0.832,151,1.622,186,1.856,187,2.054,192,2.149,216,1.025,217,0.862,219,0.954,223,1.057,233,1.91,234,1.387,235,1.057,236,0.862,242,1.902,263,1.538,268,1.057,274,2.276,343,1.795,344,1.057,345,2.777,346,2.212,347,2.35,348,2.35,349,1.709,350,1.709,351,0.862,352,2.015,353,2.015,354,1.907,355,1.709,356,2.015,357,2.015,358,1.907,359,2.015,360,2.015,361,1.175,362,2.015,363,1.175,364,1.709,365,1.175,366,1.175,367,1.175,368,1.175,369,1.175,370,1.175,371,2.015,372,1.709,373,1.175,374,1.175,375,1.538,376,1.635,377,1.175,378,1.175,379,2.452,380,2.054,381,1.057,382,2.35,383,1.175,384,1.99,385,1.387,386,1.134,387,1.635,388,1.134,389,1.635]],["title/injectables/UserService.html",[0,0.98,86,1.477]],["body/injectables/UserService.html",[0,1.107,1,2.74,2,1.271,3,0.302,4,0.26,5,0.26,7,0.602,8,0.65,10,1.865,19,2.24,21,1.669,22,0.04,23,0.577,24,1.122,25,1.501,27,2.209,28,3.152,30,3.639,32,1.865,35,1.065,37,1.129,49,2.397,50,1.955,53,0.782,54,1.023,55,0.615,56,1.632,57,0.214,58,1.137,60,1.901,65,1.271,66,1.137,67,0.302,68,0.682,69,1.959,72,2.178,75,0.022,76,0.022,86,1.669,98,1.271,114,1.215,135,1.977,144,0.554,180,3.019,182,1.632,197,1.865,216,1.305,229,3.124,250,3.124,253,3.05,256,1.901,321,2.394,351,1.597,384,2.397,386,1.704,388,0.754,390,1.901,391,4.012,392,4.012,393,2.836,394,4.012,395,3.639,396,3.303,397,3.303,398,3.303,399,4.012,400,3.388,401,3.388,402,3.388,403,3.388,404,2.309,405,3.388,406,2.789,407,3.388,408,3.388,409,2.394,410,3.388,411,2.309,412,3.388,413,2.309,414,3.303,415,3.303,416,4.92,417,4.92,418,4.012,419,2.309,420,3.388,421,3.388,422,2.789,423,2.789,424,2.789,425,3.388,426,2.309,427,2.309,428,2.789,429,2.309,430,2.309,431,2.309,432,2.309,433,3.388,434,4.012,435,2.309,436,2.789,437,4.012,438,1.901,439,4.012,440,2.309,441,1.901,442,1.901,443,1.901,444,2.309,445,2.309,446,2.309,447,2.309,448,2.309,449,3.388,450,3.388,451,2.309,452,4.012,453,4.012,454,4.012,455,3.388,456,3.388,457,3.388,458,2.309,459,2.309,460,2.309,461,2.309,462,2.309]],["title/components/UsersListComponent.html",[77,0.799,113,1.329]],["body/components/UsersListComponent.html",[3,0.185,4,0.159,5,0.159,7,0.212,8,0.445,10,1.869,19,1.97,21,1.141,22,0.04,23,0.638,24,0.73,25,1.026,27,2.657,35,1.121,37,0.705,41,1.447,49,1.505,50,1.227,53,0.707,54,0.627,55,0.377,57,0.089,58,0.698,64,1.001,67,0.185,68,0.418,69,1.88,72,1.141,75,0.015,76,0.015,77,1.179,78,0.627,79,1.141,80,0.779,81,0.779,82,0.779,84,0.698,86,2.181,87,2.257,88,2.437,89,1.618,92,0.627,93,0.627,94,1.618,96,1.618,98,0.779,100,1.001,102,0.779,103,1.275,104,1.141,105,0.512,106,1.869,107,0.779,108,0.779,109,0.779,110,0.779,111,0.627,112,0.779,113,1.505,114,1.255,115,0.698,116,0.566,117,0.698,118,0.779,126,3.236,135,1.448,143,2.957,144,0.705,145,3.129,163,3.082,180,2.335,197,1.869,222,1.907,233,1.109,236,0.837,237,2.105,242,1.54,244,2.105,250,2.077,252,3.309,253,1.436,280,2.795,289,1.907,293,1.166,321,2.077,322,1.907,351,1.839,375,1.026,380,0.566,381,2.183,386,1.313,387,1.607,389,1.607,393,3.69,395,3.309,396,1.907,397,2.795,398,1.907,406,2.795,409,1.001,414,3.493,415,2.419,422,2.419,423,2.419,428,1.907,436,3.644,438,1.166,441,1.166,442,3.082,443,1.166,463,4.127,464,4.127,465,1.166,466,2.316,467,2.316,468,2.316,469,4.02,470,2.316,471,2.316,472,2.316,473,3.395,474,2.939,475,3.395,476,3.395,477,3.395,478,3.395,479,2.939,480,2.939,481,2.939,482,3.395,483,3.395,484,3.395,485,3.395,486,2.316,487,3.395,488,2.316,489,2.316,490,1.416,491,4.02,492,4.02,493,4.055,494,4.02,495,3.309,496,4.581,497,4.02,498,4.02,499,4.02,500,4.02,501,1.416,502,1.416,503,1.416,504,4.02,505,3.644,506,4.02,507,2.316,508,1.416,509,2.316,510,2.316,511,2.316,512,1.416,513,2.316,514,1.416,515,2.316,516,1.416,517,2.316,518,2.316,519,2.316,520,2.316,521,2.316,522,2.316,523,2.316,524,2.316,525,2.316,526,2.316,527,2.316,528,2.316,529,1.416,530,2.316,531,1.907,532,2.316,533,1.907,534,1.416,535,1.416,536,1.416,537,1.416,538,1.166,539,1.416,540,1.416,541,1.416,542,1.416,543,2.316,544,1.416,545,2.316,546,1.166,547,3.395,548,1.416,549,1.416,550,1.416,551,1.416,552,2.316,553,1.416,554,1.416,555,1.416,556,1.416,557,2.316,558,1.416,559,1.416,560,2.316,561,1.416,562,1.416,563,1.416,564,1.416,565,2.316,566,1.166,567,2.316,568,1.416,569,2.316,570,2.316,571,1.416,572,1.416,573,1.416,574,1.416,575,1.416,576,1.416,577,1.416,578,2.939,579,1.416,580,1.416,581,1.416,582,1.416,583,1.416,584,1.416]],["title/interfaces/UsersListTabInterface.html",[57,0.189,385,1.199]],["body/interfaces/UsersListTabInterface.html",[3,0.321,4,0.276,5,0.276,7,0.368,8,0.68,18,1.966,22,0.04,23,0.856,35,1.078,37,1.156,38,0.801,41,0.801,53,0.368,57,0.379,67,0.657,75,0.023,76,0.023,114,1.141,144,0.849,151,1.279,186,1.872,187,2.071,192,2.155,216,1.045,217,0.886,219,0.981,223,1.087,233,1.851,234,1.415,235,1.087,236,0.886,242,1.9,263,1.569,268,1.087,274,2.296,343,1.818,344,1.087,345,2.791,346,2.241,347,2.376,348,2.476,349,1.744,350,1.744,351,0.886,352,2.046,353,2.046,354,1.928,355,1.744,356,2.046,357,2.046,358,1.928,359,2.046,360,2.046,361,1.208,362,2.046,363,1.208,364,1.744,365,1.208,366,1.208,367,1.208,368,1.208,369,1.208,370,1.208,371,2.046,372,1.744,373,1.208,374,1.208,375,1.087,376,1.415,377,1.208,378,1.208,379,2.046,380,1.818,381,1.087,382,1.744,383,1.208,384,2.227,385,1.661,386,1.576,387,1.661,388,1.576,389,1.661]],["title/coverage.html",[585,3.355]],["body/coverage.html",[0,1.735,1,2.202,5,0.4,6,2.924,9,1.955,22,0.04,24,0.764,37,0.852,57,0.365,75,0.029,76,0.029,77,1.463,78,1.574,83,2.924,86,1.75,92,1.574,93,1.574,105,1.284,111,1.574,113,1.574,116,1.42,119,3.222,120,3.222,138,2.202,178,3.222,216,1.049,218,2.924,219,2.285,236,1.284,244,2.202,245,2.924,246,2.924,253,2.202,261,2.924,282,2.924,301,2.924,313,2.924,314,2.924,343,1.42,344,2.49,354,1.42,358,1.42,376,1.42,385,1.42,386,1.735,390,2.924,463,2.924,464,2.924,465,2.924,585,2.924,586,2.924,587,3.552,588,5.033,589,2.924,590,2.924,591,5.31,592,5.033,593,3.552,594,3.552,595,3.552,596,3.552,597,2.924,598,2.924,599,2.924,600,4.558,601,4.558,602,5.033,603,5.033,604,3.552,605,3.552,606,3.552,607,3.552,608,3.552,609,3.552,610,3.552,611,3.552,612,3.552,613,3.552,614,3.552,615,3.552,616,3.552,617,3.552]],["title/dependencies.html",[618,2.068,619,2.965]],["body/dependencies.html",[22,0.04,55,1.159,58,2.144,75,0.033,76,0.033,98,2.396,619,3.583,620,4.352,621,5.167,622,4.352,623,5.966,624,4.352,625,4.352,626,4.352,627,5.167,628,4.254,629,4.352,630,4.352,631,4.352,632,4.352,633,4.352,634,4.352,635,4.352,636,4.352]],["title/miscellaneous/enumerations.html",[637,1.557,638,2.965]],["body/miscellaneous/enumerations.html",[7,0.614,22,0.039,34,4.101,41,1.338,44,4.101,50,2.13,61,4.101,62,4.101,64,3.521,75,0.032,76,0.032,143,2.253,186,1.8,242,1.628,351,1.479,387,2.147,388,1.338,389,2.147,409,3.521,495,4.101,538,4.101,637,2.538,638,3.37,639,4.599,640,5.725,641,4.094,642,4.981,643,4.981,644,4.981,645,4.981,646,4.981,647,4.094,648,4.094,649,4.094,650,4.094]],["title/index.html",[7,0.377,33,1.557,651,2.512]],["body/index.html",[4,0.489,22,0.033,75,0.033,76,0.033,265,3.575,324,3.575,531,3.575,586,4.533,628,3.575,652,4.342,653,5.16,654,5.16,655,5.16,656,4.342,657,4.342,658,3.575,659,4.342,660,5.16,661,5.506,662,4.342,663,4.342,664,5.506,665,5.16,666,4.342,667,4.342,668,4.342,669,4.342,670,4.342,671,4.342,672,4.342,673,4.342,674,4.342,675,5.16,676,4.342,677,4.342]],["title/modules.html",[678,3.355]],["body/modules.html",[22,0.035,75,0.035,76,0.035,678,3.957]],["title/overview.html",[679,3.355]],["body/overview.html",[2,2.594,22,0.035,75,0.035,76,0.035,79,2.322,105,1.703,217,1.703,388,1.54,679,3.88,680,4.712,681,4.712,682,4.712]],["title/properties.html",[8,0.691,618,2.068]],["body/properties.html",[8,0.916,22,0.037,75,0.035,76,0.035,658,3.928,683,4.771]],["title/miscellaneous/variables.html",[637,1.557,684,2.965]],["body/miscellaneous/variables.html",[7,0.536,22,0.04,24,1.183,35,0.686,37,1.097,49,2.027,50,2.034,69,2.027,75,0.03,76,0.03,85,2.94,151,1.824,197,1.966,233,1.495,380,1.829,386,1.495,388,1.495,393,2.525,424,2.94,493,2.94,505,2.94,533,2.94,546,2.94,566,4.154,589,2.94,590,3.766,597,2.94,598,3.766,599,4.154,637,2.214,639,2.94,684,2.94,685,3.572,686,3.572,687,3.572,688,3.572,689,3.572,690,3.572,691,3.572,692,4.574,693,3.572,694,3.572,695,3.572,696,3.572,697,3.572,698,3.572,699,3.572,700,3.572,701,3.572,702,3.572,703,3.572,704,3.572,705,4.574,706,3.572,707,3.572,708,3.572,709,5.321,710,5.321,711,3.572,712,3.572,713,3.572,714,3.572,715,3.572,716,3.572]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BaseApiService.html":{},"interfaces/CardInterface.html":{},"injectables/DataUserService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRequestParameters.html":{},"components/MainComponent.html":{},"directives/NavigationLinkDirective.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":386,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":683,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":636,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":388,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"injectables/UserService.html":{},"interfaces/UsersListTabInterface.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1/1",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":609,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":607,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":601,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":605,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":608,"title":{},"body":{"coverage.html":{}}}],["10/13",{"_index":613,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":421,"title":{},"body":{"injectables/UserService.html":{}}}],["12/13",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":614,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":424,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["16",{"_index":604,"title":{},"body":{"coverage.html":{}}}],["19.2.0",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["19.2.14",{"_index":659,"title":{},"body":{"index.html":{}}}],["19.2.18",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":634,"title":{},"body":{"dependencies.html":{}}}],["2/14",{"_index":615,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":600,"title":{},"body":{"coverage.html":{}}}],["2023",{"_index":273,"title":{},"body":{"components/FooterComponent.html":{}}}],["25",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":602,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":681,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":611,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":680,"title":{},"body":{"overview.html":{}}}],["50",{"_index":610,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":632,"title":{},"body":{"dependencies.html":{}}}],["76",{"_index":612,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":682,"title":{},"body":{"overview.html":{}}}],["92",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["a.id",{"_index":453,"title":{},"body":{"injectables/UserService.html":{}}}],["a.name.localecompare(b.name",{"_index":455,"title":{},"body":{"injectables/UserService.html":{}}}],["a[appnavigationlink",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"directives/NavigationLinkDirective.html":{},"components/UsersListComponent.html":{}}}],["accordion",{"_index":470,"title":{},"body":{"components/UsersListComponent.html":{}}}],["accordioncomponent",{"_index":476,"title":{},"body":{"components/UsersListComponent.html":{}}}],["actual_component",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/UsersListComponent.html":{}}}],["address",{"_index":345,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["always",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anchor",{"_index":332,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["angular",{"_index":656,"title":{},"body":{"index.html":{}}}],["angular/cdk",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":185,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["angular/compiler",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":55,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BaseApiService.html":{},"injectables/DataUserService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRequestParameters.html":{},"components/MainComponent.html":{},"directives/NavigationLinkDirective.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["angular/material/paginator",{"_index":443,"title":{},"body":{"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["angular/material/tabs",{"_index":438,"title":{},"body":{"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["angular/platform",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"dependencies.html":{}}}],["apartment",{"_index":361,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["api",{"_index":141,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["api.interceptor.ts",{"_index":598,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api.service",{"_index":60,"title":{},"body":{"injectables/ApiService.html":{},"injectables/UserService.html":{}}}],["api.service.ts",{"_index":120,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{},"coverage.html":{}}}],["api.service.ts:115",{"_index":169,"title":{},"body":{"injectables/BaseApiService.html":{}}}],["api.service.ts:127",{"_index":171,"title":{},"body":{"injectables/BaseApiService.html":{}}}],["api.service.ts:13",{"_index":300,"title":{},"body":{"interfaces/IRequestParameters.html":{}}}],["api.service.ts:145",{"_index":174,"title":{},"body":{"injectables/BaseApiService.html":{}}}],["api.service.ts:154",{"_index":159,"title":{},"body":{"injectables/BaseApiService.html":{}}}],["api.service.ts:21",{"_index":136,"title":{},"body":{"injectables/BaseApiService.html":{}}}],["api.service.ts:29",{"_index":177,"title":{},"body":{"injectables/BaseApiService.html":{}}}],["api.service.ts:38",{"_index":155,"title":{},"body":{"injectables/BaseApiService.html":{}}}],["api.service.ts:56",{"_index":157,"title":{},"body":{"injectables/BaseApiService.html":{}}}],["api.service.ts:67",{"_index":139,"title":{},"body":{"injectables/BaseApiService.html":{}}}],["api.service.ts:85",{"_index":153,"title":{},"body":{"injectables/BaseApiService.html":{}}}],["api.service.ts:97",{"_index":166,"title":{},"body":{"injectables/BaseApiService.html":{}}}],["apiservice",{"_index":1,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["app",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/UsersListComponent.html":{}}}],["app.component.html",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":78,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/UsersListComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":590,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicable",{"_index":243,"title":{},"body":{"interfaces/CardInterface.html":{}}}],["application",{"_index":265,"title":{},"body":{"components/FooterComponent.html":{},"index.html":{}}}],["applicationconfig",{"_index":686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":38,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"injectables/DataUserService.html":{},"interfaces/IRequestParameters.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["array.isarray(response.body",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associate",{"_index":240,"title":{},"body":{"interfaces/CardInterface.html":{}}}],["automatically",{"_index":671,"title":{},"body":{"index.html":{}}}],["b",{"_index":452,"title":{},"body":{"injectables/UserService.html":{}}}],["b.id",{"_index":454,"title":{},"body":{"injectables/UserService.html":{}}}],["base",{"_index":59,"title":{},"body":{"injectables/ApiService.html":{}}}],["baseapiservice",{"_index":9,"title":{"injectables/BaseApiService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{},"coverage.html":{}}}],["based",{"_index":505,"title":{},"body":{"components/UsersListComponent.html":{},"miscellaneous/variables.html":{}}}],["between",{"_index":532,"title":{},"body":{"components/UsersListComponent.html":{}}}],["bind",{"_index":408,"title":{},"body":{"injectables/UserService.html":{}}}],["body",{"_index":165,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/CardInterface.html":{},"interfaces/IRequestParameters.html":{}}}],["boolean",{"_index":496,"title":{},"body":{"components/UsersListComponent.html":{}}}],["both",{"_index":643,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["browser",{"_index":628,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["bs",{"_index":372,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["business",{"_index":373,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["buttoncomponent",{"_index":285,"title":{},"body":{"components/HeaderComponent.html":{}}}],["card",{"_index":223,"title":{},"body":{"interfaces/CardInterface.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["cardcomponent",{"_index":220,"title":{},"body":{"interfaces/CardInterface.html":{}}}],["cardinterface",{"_index":216,"title":{"interfaces/CardInterface.html":{}},"body":{"interfaces/CardInterface.html":{},"injectables/DataUserService.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"injectables/UserService.html":{},"interfaces/UsersListTabInterface.html":{},"coverage.html":{}}}],["catcherror",{"_index":181,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["catcherror(error",{"_index":199,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["catchphrase",{"_index":371,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["change",{"_index":328,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["changes",{"_index":325,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["changing",{"_index":405,"title":{},"body":{"injectables/UserService.html":{}}}],["checks",{"_index":491,"title":{},"body":{"components/UsersListComponent.html":{}}}],["city",{"_index":362,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["class",{"_index":68,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BaseApiService.html":{},"injectables/DataUserService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRequestParameters.html":{},"components/MainComponent.html":{},"directives/NavigationLinkDirective.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["cli",{"_index":657,"title":{},"body":{"index.html":{}}}],["code",{"_index":366,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["combinelatest",{"_index":439,"title":{},"body":{"injectables/UserService.html":{}}}],["company",{"_index":274,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["compodoc",{"_index":675,"title":{},"body":{"index.html":{}}}],["component",{"_index":77,"title":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/UsersListComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/CardInterface.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/UsersListComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/UsersListComponent.html":{}}}],["components",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/UsersListComponent.html":{},"overview.html":{}}}],["components/footer/footer.component",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["components/header/header.component",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["components/src/lib/accordion/accordion.component",{"_index":536,"title":{},"body":{"components/UsersListComponent.html":{}}}],["components/src/lib/button/button.component",{"_index":294,"title":{},"body":{"components/HeaderComponent.html":{}}}],["computed",{"_index":415,"title":{},"body":{"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["conditionforuserslisteven",{"_index":482,"title":{},"body":{"components/UsersListComponent.html":{}}}],["conditionforuserslistfull",{"_index":483,"title":{},"body":{"components/UsersListComponent.html":{}}}],["conditionforuserslistodd",{"_index":484,"title":{},"body":{"components/UsersListComponent.html":{}}}],["conditions",{"_index":497,"title":{},"body":{"components/UsersListComponent.html":{}}}],["console.log('log",{"_index":459,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":337,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["constructor",{"_index":135,"title":{},"body":{"injectables/BaseApiService.html":{},"injectables/DataUserService.html":{},"interfaces/IRequestParameters.html":{},"directives/NavigationLinkDirective.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["contact",{"_index":281,"title":{},"body":{"components/FooterComponent.html":{}}}],["containing",{"_index":375,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{}}}],["contains",{"_index":407,"title":{},"body":{"injectables/UserService.html":{}}}],["content",{"_index":225,"title":{},"body":{"interfaces/CardInterface.html":{},"components/FooterComponent.html":{}}}],["control",{"_index":160,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["coordinates",{"_index":368,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["copy",{"_index":272,"title":{},"body":{"components/FooterComponent.html":{}}}],["copyright",{"_index":267,"title":{},"body":{"components/FooterComponent.html":{}}}],["coverage",{"_index":585,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":315,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["current",{"_index":381,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{}}}],["data",{"_index":143,"title":{},"body":{"injectables/BaseApiService.html":{},"injectables/DataUserService.html":{},"interfaces/IRequestParameters.html":{},"components/UsersListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["data.pageindex",{"_index":569,"title":{},"body":{"components/UsersListComponent.html":{}}}],["data.pagesize",{"_index":570,"title":{},"body":{"components/UsersListComponent.html":{}}}],["data/posts.json",{"_index":649,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["data/users.json",{"_index":647,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["data[0",{"_index":456,"title":{},"body":{"injectables/UserService.html":{}}}],["data[0].sort",{"_index":451,"title":{},"body":{"injectables/UserService.html":{}}}],["data[1]].sort",{"_index":457,"title":{},"body":{"injectables/UserService.html":{}}}],["dataservice",{"_index":288,"title":{},"body":{"components/HeaderComponent.html":{}}}],["dataservice.navlinks",{"_index":296,"title":{},"body":{"components/HeaderComponent.html":{}}}],["datauserservice",{"_index":244,"title":{"injectables/DataUserService.html":{}},"body":{"injectables/DataUserService.html":{},"components/UsersListComponent.html":{},"coverage.html":{}}}],["default",{"_index":49,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"components/HeaderComponent.html":{},"directives/NavigationLinkDirective.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"injectables/DataUserService.html":{},"components/HeaderComponent.html":{},"interfaces/IRequestParameters.html":{},"directives/NavigationLinkDirective.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["defines",{"_index":186,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{},"miscellaneous/enumerations.html":{}}}],["delaywhen",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["delete",{"_index":127,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["delete(url",{"_index":137,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["deletedata",{"_index":128,"title":{},"body":{"injectables/BaseApiService.html":{}}}],["deletedata(url",{"_index":152,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["deleting",{"_index":142,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["dependencies",{"_index":619,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":144,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/CardInterface.html":{},"components/FooterComponent.html":{},"interfaces/IRequestParameters.html":{},"directives/NavigationLinkDirective.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{}}}],["destroyed",{"_index":528,"title":{},"body":{"components/UsersListComponent.html":{}}}],["development",{"_index":660,"title":{},"body":{"index.html":{}}}],["directive",{"_index":105,"title":{"directives/NavigationLinkDirective.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"directives/NavigationLinkDirective.html":{},"components/UsersListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"directives/NavigationLinkDirective.html":{},"components/UsersListComponent.html":{}}}],["display",{"_index":266,"title":{},"body":{"components/FooterComponent.html":{}}}],["displayed",{"_index":226,"title":{},"body":{"interfaces/CardInterface.html":{}}}],["displaying",{"_index":466,"title":{},"body":{"components/UsersListComponent.html":{}}}],["displays",{"_index":222,"title":{},"body":{"interfaces/CardInterface.html":{},"components/UsersListComponent.html":{}}}],["documentation",{"_index":586,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/UsersListComponent.html":{}}}],["dynamic",{"_index":629,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":190,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["effect",{"_index":321,"title":{},"body":{"directives/NavigationLinkDirective.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["element",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"directives/NavigationLinkDirective.html":{},"components/UsersListComponent.html":{}}}],["element.classname",{"_index":341,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["element.text",{"_index":339,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["elementref",{"_index":335,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["elements",{"_index":232,"title":{},"body":{"interfaces/CardInterface.html":{}}}],["elevate",{"_index":307,"title":{},"body":{"components/MainComponent.html":{}}}],["email",{"_index":353,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["embedded",{"_index":304,"title":{},"body":{"components/MainComponent.html":{}}}],["emits",{"_index":150,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["empty",{"_index":492,"title":{},"body":{"components/UsersListComponent.html":{}}}],["endpoints",{"_index":642,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enum",{"_index":64,"title":{},"body":{"injectables/ApiService.html":{},"components/UsersListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["enum.ts",{"_index":640,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":638,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/user",{"_index":63,"title":{},"body":{"injectables/ApiService.html":{}}}],["error",{"_index":161,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["error.error",{"_index":211,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["error.error.errors",{"_index":212,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["error.error.errors[0].details[0",{"_index":214,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["error.error.errors[0].title",{"_index":213,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["esm",{"_index":309,"title":{},"body":{"components/MainComponent.html":{}}}],["euserapi",{"_index":61,"title":{},"body":{"injectables/ApiService.html":{},"miscellaneous/enumerations.html":{}}}],["euserlistype",{"_index":538,"title":{},"body":{"components/UsersListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["euserlistype.even",{"_index":551,"title":{},"body":{"components/UsersListComponent.html":{}}}],["euserlistype.full",{"_index":564,"title":{},"body":{"components/UsersListComponent.html":{}}}],["euserlistype.odd",{"_index":546,"title":{},"body":{"components/UsersListComponent.html":{},"miscellaneous/variables.html":{}}}],["euserlistypetab",{"_index":409,"title":{},"body":{"injectables/UserService.html":{},"components/UsersListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["euserlistypetab.even",{"_index":561,"title":{},"body":{"components/UsersListComponent.html":{}}}],["euserlistypetab.odd",{"_index":558,"title":{},"body":{"components/UsersListComponent.html":{}}}],["eusermessageapi",{"_index":62,"title":{},"body":{"injectables/ApiService.html":{},"miscellaneous/enumerations.html":{}}}],["even",{"_index":389,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{},"miscellaneous/enumerations.html":{}}}],["event",{"_index":406,"title":{},"body":{"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["example",{"_index":665,"title":{},"body":{"index.html":{}}}],["export",{"_index":67,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BaseApiService.html":{},"interfaces/CardInterface.html":{},"injectables/DataUserService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRequestParameters.html":{},"components/MainComponent.html":{},"directives/NavigationLinkDirective.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{}}}],["external",{"_index":644,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["failed",{"_index":215,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["false",{"_index":499,"title":{},"body":{"components/UsersListComponent.html":{}}}],["fetch",{"_index":468,"title":{},"body":{"components/UsersListComponent.html":{}}}],["fetched",{"_index":506,"title":{},"body":{"components/UsersListComponent.html":{}}}],["fetches",{"_index":504,"title":{},"body":{"components/UsersListComponent.html":{}}}],["fetching",{"_index":495,"title":{},"body":{"components/UsersListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BaseApiService.html":{},"interfaces/CardInterface.html":{},"injectables/DataUserService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRequestParameters.html":{},"components/MainComponent.html":{},"directives/NavigationLinkDirective.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{},"coverage.html":{}}}],["files",{"_index":674,"title":{},"body":{"index.html":{}}}],["filter",{"_index":440,"title":{},"body":{"injectables/UserService.html":{}}}],["filtering",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["footer",{"_index":264,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/UsersListComponent.html":{}}}],["footer.component.html",{"_index":270,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":271,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":93,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/UsersListComponent.html":{},"coverage.html":{}}}],["format",{"_index":471,"title":{},"body":{"components/UsersListComponent.html":{}}}],["frontendivanti",{"_index":652,"title":{},"body":{"index.html":{}}}],["full",{"_index":351,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{},"miscellaneous/enumerations.html":{}}}],["fulllistusers",{"_index":485,"title":{},"body":{"components/UsersListComponent.html":{}}}],["general",{"_index":140,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["generate",{"_index":676,"title":{},"body":{"index.html":{}}}],["generated",{"_index":654,"title":{},"body":{"index.html":{}}}],["geo",{"_index":346,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["geographical",{"_index":367,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["get(url",{"_index":154,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["getdata",{"_index":129,"title":{},"body":{"injectables/BaseApiService.html":{}}}],["getdata(url",{"_index":156,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["getinternaluser",{"_index":11,"title":{},"body":{"injectables/ApiService.html":{}}}],["getinternaluser(userid",{"_index":17,"title":{},"body":{"injectables/ApiService.html":{}}}],["getinternalusers",{"_index":12,"title":{},"body":{"injectables/ApiService.html":{}}}],["getinternalusers(parameter",{"_index":29,"title":{},"body":{"injectables/ApiService.html":{}}}],["getinternalusersmessage",{"_index":13,"title":{},"body":{"injectables/ApiService.html":{}}}],["getinternalusersmessage(parameter",{"_index":39,"title":{},"body":{"injectables/ApiService.html":{}}}],["getoutsourceusers",{"_index":14,"title":{},"body":{"injectables/ApiService.html":{}}}],["getoutsourceusers(parameter",{"_index":42,"title":{},"body":{"injectables/ApiService.html":{}}}],["getoutsourceusersmessage",{"_index":15,"title":{},"body":{"injectables/ApiService.html":{}}}],["getoutsourceusersmessage(parameter",{"_index":45,"title":{},"body":{"injectables/ApiService.html":{}}}],["getting",{"_index":33,"title":{"index.html":{}},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["getuser",{"_index":16,"title":{},"body":{"injectables/ApiService.html":{}}}],["getuser(userid",{"_index":47,"title":{},"body":{"injectables/ApiService.html":{}}}],["getusermessages",{"_index":486,"title":{},"body":{"components/UsersListComponent.html":{}}}],["getusermessages(data",{"_index":507,"title":{},"body":{"components/UsersListComponent.html":{}}}],["getuserslist",{"_index":400,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserslist(param",{"_index":403,"title":{},"body":{"injectables/UserService.html":{}}}],["getusersmessageslist",{"_index":401,"title":{},"body":{"injectables/UserService.html":{}}}],["getusersmessageslist(param",{"_index":410,"title":{},"body":{"injectables/UserService.html":{}}}],["getusersmessageslistrequestsubject",{"_index":391,"title":{},"body":{"injectables/UserService.html":{}}}],["handle",{"_index":517,"title":{},"body":{"components/UsersListComponent.html":{}}}],["handles",{"_index":473,"title":{},"body":{"components/UsersListComponent.html":{}}}],["header",{"_index":283,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/UsersListComponent.html":{}}}],["header.component.html",{"_index":286,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":287,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header__nav",{"_index":342,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["headercomponent",{"_index":92,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/UsersListComponent.html":{},"coverage.html":{}}}],["host",{"_index":331,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["hostelementref",{"_index":317,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["href",{"_index":416,"title":{},"body":{"injectables/UserService.html":{}}}],["html",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/UsersListComponent.html":{}}}],["http",{"_index":123,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["http://localhost:4200",{"_index":670,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":175,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["httpinterceptorfn",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpresponse",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://jsonplaceholder.typicode.com/posts",{"_index":650,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["https://jsonplaceholder.typicode.com/users",{"_index":648,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["id",{"_index":234,"title":{},"body":{"interfaces/CardInterface.html":{},"injectables/DataUserService.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["identifier",{"_index":236,"title":{},"body":{"interfaces/CardInterface.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{},"coverage.html":{}}}],["images",{"_index":231,"title":{},"body":{"interfaces/CardInterface.html":{}}}],["implements",{"_index":474,"title":{},"body":{"components/UsersListComponent.html":{}}}],["import",{"_index":53,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BaseApiService.html":{},"injectables/DataUserService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRequestParameters.html":{},"components/MainComponent.html":{},"directives/NavigationLinkDirective.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{}}}],["imports",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/UsersListComponent.html":{}}}],["include",{"_index":149,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/CardInterface.html":{},"interfaces/IRequestParameters.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"interfaces/CardInterface.html":{},"injectables/DataUserService.html":{},"components/HeaderComponent.html":{},"directives/NavigationLinkDirective.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":299,"title":{},"body":{"interfaces/IRequestParameters.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BaseApiService.html":{},"interfaces/CardInterface.html":{},"injectables/DataUserService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRequestParameters.html":{},"components/MainComponent.html":{},"directives/NavigationLinkDirective.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{}}}],["information",{"_index":268,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["inject",{"_index":54,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"components/HeaderComponent.html":{},"interfaces/IRequestParameters.html":{},"directives/NavigationLinkDirective.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["inject(apiservice",{"_index":412,"title":{},"body":{"injectables/UserService.html":{}}}],["inject(baseapiservice",{"_index":51,"title":{},"body":{"injectables/ApiService.html":{}}}],["inject(datauserservice",{"_index":515,"title":{},"body":{"components/UsersListComponent.html":{}}}],["inject(httpclient",{"_index":176,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["inject(router",{"_index":428,"title":{},"body":{"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["inject(userservice",{"_index":289,"title":{},"body":{"components/HeaderComponent.html":{},"components/UsersListComponent.html":{}}}],["inject>(elementref",{"_index":329,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"injectables/DataUserService.html":{},"injectables/UserService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"injectables/DataUserService.html":{},"interfaces/IRequestParameters.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"injectables/DataUserService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":336,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["input('menu",{"_index":326,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["instance",{"_index":530,"title":{},"body":{"components/UsersListComponent.html":{}}}],["instanceof",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["integration",{"_index":312,"title":{},"body":{"components/MainComponent.html":{}}}],["interceptor",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interface",{"_index":57,"title":{"interfaces/CardInterface.html":{},"interfaces/IRequestParameters.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"interfaces/CardInterface.html":{},"injectables/DataUserService.html":{},"interfaces/IRequestParameters.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{},"coverage.html":{}}}],["interface.ts",{"_index":219,"title":{},"body":{"interfaces/CardInterface.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":217,"title":{},"body":{"interfaces/CardInterface.html":{},"interfaces/IRequestParameters.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{},"overview.html":{}}}],["interfaces/card",{"_index":256,"title":{},"body":{"injectables/DataUserService.html":{},"injectables/UserService.html":{}}}],["interfaces/user",{"_index":56,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DataUserService.html":{},"injectables/UserService.html":{}}}],["internal",{"_index":34,"title":{},"body":{"injectables/ApiService.html":{},"miscellaneous/enumerations.html":{}}}],["internalsorce",{"_index":646,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ipaas",{"_index":305,"title":{},"body":{"components/MainComponent.html":{}}}],["irequestparameters",{"_index":138,"title":{"interfaces/IRequestParameters.html":{}},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{},"coverage.html":{}}}],["itsm",{"_index":308,"title":{},"body":{"components/MainComponent.html":{}}}],["label",{"_index":417,"title":{},"body":{"injectables/UserService.html":{}}}],["lat",{"_index":349,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["latitude",{"_index":369,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["leaks",{"_index":526,"title":{},"body":{"components/UsersListComponent.html":{}}}],["legend",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/UsersListComponent.html":{}}}],["link",{"_index":295,"title":{},"body":{"components/HeaderComponent.html":{},"directives/NavigationLinkDirective.html":{}}}],["link's",{"_index":323,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["link.directive",{"_index":292,"title":{},"body":{"components/HeaderComponent.html":{}}}],["link.directive.ts",{"_index":314,"title":{},"body":{"directives/NavigationLinkDirective.html":{},"coverage.html":{}}}],["link.directive.ts:16",{"_index":327,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["link.directive.ts:25",{"_index":318,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["link.href",{"_index":298,"title":{},"body":{"components/HeaderComponent.html":{}}}],["list",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CardInterface.html":{},"injectables/DataUserService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{}}}],["list.component.html",{"_index":479,"title":{},"body":{"components/UsersListComponent.html":{}}}],["list.component.scss",{"_index":480,"title":{},"body":{"components/UsersListComponent.html":{}}}],["list.component.ts",{"_index":465,"title":{},"body":{"components/UsersListComponent.html":{},"coverage.html":{}}}],["list.component.ts:109",{"_index":502,"title":{},"body":{"components/UsersListComponent.html":{}}}],["list.component.ts:121",{"_index":490,"title":{},"body":{"components/UsersListComponent.html":{}}}],["list.component.ts:132",{"_index":503,"title":{},"body":{"components/UsersListComponent.html":{}}}],["list.component.ts:153",{"_index":514,"title":{},"body":{"components/UsersListComponent.html":{}}}],["list.component.ts:172",{"_index":508,"title":{},"body":{"components/UsersListComponent.html":{}}}],["list.component.ts:194",{"_index":512,"title":{},"body":{"components/UsersListComponent.html":{}}}],["list.component.ts:39",{"_index":534,"title":{},"body":{"components/UsersListComponent.html":{}}}],["list.component.ts:44",{"_index":529,"title":{},"body":{"components/UsersListComponent.html":{}}}],["list.component.ts:50",{"_index":516,"title":{},"body":{"components/UsersListComponent.html":{}}}],["list.component.ts:57",{"_index":489,"title":{},"body":{"components/UsersListComponent.html":{}}}],["list.component.ts:97",{"_index":501,"title":{},"body":{"components/UsersListComponent.html":{}}}],["list/users",{"_index":464,"title":{},"body":{"components/UsersListComponent.html":{},"coverage.html":{}}}],["lists",{"_index":520,"title":{},"body":{"components/UsersListComponent.html":{}}}],["literal",{"_index":30,"title":{},"body":{"injectables/ApiService.html":{},"injectables/UserService.html":{}}}],["lng",{"_index":350,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["loader",{"_index":125,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["loaderoff",{"_index":130,"title":{},"body":{"injectables/BaseApiService.html":{}}}],["loaderoff(error",{"_index":158,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["local",{"_index":663,"title":{},"body":{"index.html":{}}}],["log",{"_index":630,"title":{},"body":{"dependencies.html":{}}}],["longitude",{"_index":370,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["m",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["main",{"_index":229,"title":{},"body":{"interfaces/CardInterface.html":{},"components/MainComponent.html":{},"injectables/UserService.html":{}}}],["main'},{'name",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/UsersListComponent.html":{}}}],["main.component.html",{"_index":302,"title":{},"body":{"components/MainComponent.html":{}}}],["main.component.scss",{"_index":303,"title":{},"body":{"components/MainComponent.html":{}}}],["maincomponent",{"_index":111,"title":{"components/MainComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/UsersListComponent.html":{},"coverage.html":{}}}],["manage",{"_index":469,"title":{},"body":{"components/UsersListComponent.html":{}}}],["map",{"_index":182,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{},"injectables/UserService.html":{}}}],["map((data",{"_index":449,"title":{},"body":{"injectables/UserService.html":{}}}],["map((response",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":76,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BaseApiService.html":{},"interfaces/CardInterface.html":{},"injectables/DataUserService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRequestParameters.html":{},"components/MainComponent.html":{},"directives/NavigationLinkDirective.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matpaginator",{"_index":478,"title":{},"body":{"components/UsersListComponent.html":{}}}],["mattab",{"_index":434,"title":{},"body":{"injectables/UserService.html":{}}}],["mattabchangeevent",{"_index":437,"title":{},"body":{"injectables/UserService.html":{}}}],["mattabsmodule",{"_index":477,"title":{},"body":{"components/UsersListComponent.html":{}}}],["memory",{"_index":525,"title":{},"body":{"components/UsersListComponent.html":{}}}],["message.userid",{"_index":260,"title":{},"body":{"injectables/DataUserService.html":{}}}],["messages",{"_index":41,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DataUserService.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{},"miscellaneous/enumerations.html":{}}}],["met",{"_index":498,"title":{},"body":{"components/UsersListComponent.html":{}}}],["metadata",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"directives/NavigationLinkDirective.html":{},"components/UsersListComponent.html":{}}}],["method",{"_index":32,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"injectables/DataUserService.html":{},"interfaces/IRequestParameters.html":{},"injectables/UserService.html":{}}}],["methods",{"_index":10,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"injectables/DataUserService.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["miscellaneous",{"_index":637,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":673,"title":{},"body":{"index.html":{}}}],["modules",{"_index":678,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":23,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BaseApiService.html":{},"injectables/DataUserService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRequestParameters.html":{},"components/MainComponent.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{}}}],["navigate",{"_index":531,"title":{},"body":{"components/UsersListComponent.html":{},"index.html":{}}}],["navigation",{"_index":316,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["navigationlinkdirective",{"_index":116,"title":{"directives/NavigationLinkDirective.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"directives/NavigationLinkDirective.html":{},"components/UsersListComponent.html":{},"coverage.html":{}}}],["navlinks",{"_index":392,"title":{},"body":{"injectables/UserService.html":{}}}],["new",{"_index":253,"title":{},"body":{"injectables/DataUserService.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"coverage.html":{}}}],["next",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":666,"title":{},"body":{"index.html":{}}}],["ngondestroy",{"_index":487,"title":{},"body":{"components/UsersListComponent.html":{}}}],["ngunsubscribe",{"_index":481,"title":{},"body":{"components/UsersListComponent.html":{}}}],["npm",{"_index":677,"title":{},"body":{"index.html":{}}}],["null",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":233,"title":{},"body":{"interfaces/CardInterface.html":{},"injectables/DataUserService.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":348,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["objects",{"_index":377,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["observable",{"_index":28,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{},"injectables/UserService.html":{}}}],["observables",{"_index":523,"title":{},"body":{"components/UsersListComponent.html":{}}}],["odd",{"_index":387,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{},"miscellaneous/enumerations.html":{}}}],["ondestroy",{"_index":475,"title":{},"body":{"components/UsersListComponent.html":{}}}],["oninit",{"_index":535,"title":{},"body":{"components/UsersListComponent.html":{}}}],["onpagination",{"_index":488,"title":{},"body":{"components/UsersListComponent.html":{}}}],["onpagination(data",{"_index":513,"title":{},"body":{"components/UsersListComponent.html":{}}}],["open",{"_index":669,"title":{},"body":{"index.html":{}}}],["operations",{"_index":518,"title":{},"body":{"components/UsersListComponent.html":{}}}],["optional",{"_index":25,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"interfaces/CardInterface.html":{},"injectables/DataUserService.html":{},"interfaces/IRequestParameters.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["otherwise",{"_index":500,"title":{},"body":{"components/UsersListComponent.html":{}}}],["outsource",{"_index":44,"title":{},"body":{"injectables/ApiService.html":{},"miscellaneous/enumerations.html":{}}}],["overview",{"_index":679,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":618,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":380,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{},"miscellaneous/variables.html":{}}}],["pageevent",{"_index":442,"title":{},"body":{"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["pageindex",{"_index":422,"title":{},"body":{"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["pagesize",{"_index":423,"title":{},"body":{"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["pagination",{"_index":393,"title":{},"body":{"injectables/UserService.html":{},"components/UsersListComponent.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":72,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"injectables/DataUserService.html":{},"interfaces/IRequestParameters.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["parameter",{"_index":36,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["parameters",{"_index":21,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"injectables/DataUserService.html":{},"interfaces/IRequestParameters.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["params",{"_index":196,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["parentrouter",{"_index":394,"title":{},"body":{"injectables/UserService.html":{}}}],["passed",{"_index":188,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["patch",{"_index":131,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["patch(url",{"_index":164,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["patchdata",{"_index":132,"title":{},"body":{"injectables/BaseApiService.html":{}}}],["patchdata(url",{"_index":168,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["patching",{"_index":167,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["per",{"_index":383,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["perpage",{"_index":382,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["phone",{"_index":356,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["pipe",{"_index":197,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"miscellaneous/variables.html":{}}}],["plddata",{"_index":572,"title":{},"body":{"components/UsersListComponent.html":{}}}],["policy",{"_index":278,"title":{},"body":{"components/FooterComponent.html":{}}}],["post",{"_index":133,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["post(url",{"_index":170,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["postal",{"_index":365,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["postdata",{"_index":134,"title":{},"body":{"injectables/BaseApiService.html":{}}}],["postdata(url",{"_index":173,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["posting",{"_index":172,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["prevent",{"_index":524,"title":{},"body":{"components/UsersListComponent.html":{}}}],["previouspageindex",{"_index":425,"title":{},"body":{"injectables/UserService.html":{}}}],["privacy",{"_index":277,"title":{},"body":{"components/FooterComponent.html":{}}}],["private",{"_index":126,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{},"directives/NavigationLinkDirective.html":{},"components/UsersListComponent.html":{}}}],["project",{"_index":653,"title":{},"body":{"index.html":{}}}],["projects/shared",{"_index":293,"title":{},"body":{"components/HeaderComponent.html":{},"components/UsersListComponent.html":{}}}],["prominently",{"_index":227,"title":{},"body":{"interfaces/CardInterface.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"interfaces/CardInterface.html":{},"components/HeaderComponent.html":{},"directives/NavigationLinkDirective.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{},"properties.html":{}}}],["property",{"_index":192,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/CardInterface.html":{},"interfaces/IRequestParameters.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["protected",{"_index":121,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["provided",{"_index":509,"title":{},"body":{"components/UsersListComponent.html":{}}}],["providedin",{"_index":65,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"injectables/DataUserService.html":{},"interfaces/IRequestParameters.html":{},"injectables/UserService.html":{}}}],["providehttpclient",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":519,"title":{},"body":{"components/UsersListComponent.html":{}}}],["providezonechangedetection({eventcoalescing",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":124,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["rapid",{"_index":311,"title":{},"body":{"components/MainComponent.html":{}}}],["readonly",{"_index":122,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["received",{"_index":521,"title":{},"body":{"components/UsersListComponent.html":{}}}],["reference",{"_index":330,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["referencing",{"_index":239,"title":{},"body":{"interfaces/CardInterface.html":{}}}],["related",{"_index":269,"title":{},"body":{"components/FooterComponent.html":{}}}],["reload",{"_index":672,"title":{},"body":{"index.html":{}}}],["representing",{"_index":378,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["represents",{"_index":263,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["req",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.params.get('page",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.params.get('size",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.params.get('type",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url.indexof('users",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":147,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["requests",{"_index":189,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["reserved",{"_index":276,"title":{},"body":{"components/FooterComponent.html":{}}}],["resides",{"_index":363,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["response",{"_index":151,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{},"miscellaneous/variables.html":{}}}],["response.body",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response.clone({body",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["result",{"_index":250,"title":{},"body":{"injectables/DataUserService.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["result.filter(message",{"_index":259,"title":{},"body":{"injectables/DataUserService.html":{}}}],["results",{"_index":75,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BaseApiService.html":{},"interfaces/CardInterface.html":{},"injectables/DataUserService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRequestParameters.html":{},"components/MainComponent.html":{},"directives/NavigationLinkDirective.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":69,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"injectables/DataUserService.html":{},"interfaces/IRequestParameters.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":27,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"injectables/DataUserService.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["reusable",{"_index":221,"title":{},"body":{"interfaces/CardInterface.html":{}}}],["rights",{"_index":275,"title":{},"body":{"components/FooterComponent.html":{}}}],["root",{"_index":66,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BaseApiService.html":{},"injectables/DataUserService.html":{},"interfaces/IRequestParameters.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/UsersListComponent.html":{}}}],["router",{"_index":395,"title":{},"body":{"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["router.url.indexof('full",{"_index":583,"title":{},"body":{"components/UsersListComponent.html":{}}}],["router.url.indexof(\\'full",{"_index":584,"title":{},"body":{"components/UsersListComponent.html":{}}}],["routerlink",{"_index":284,"title":{},"body":{"components/HeaderComponent.html":{}}}],["routermodule",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["routeroutlet",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":533,"title":{},"body":{"components/UsersListComponent.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":664,"title":{},"body":{"index.html":{}}}],["running",{"_index":668,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":58,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"dependencies.html":{}}}],["selector",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"directives/NavigationLinkDirective.html":{},"components/UsersListComponent.html":{}}}],["send",{"_index":146,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["serveonce",{"_index":667,"title":{},"body":{"index.html":{}}}],["server",{"_index":661,"title":{},"body":{"index.html":{}}}],["service",{"_index":280,"title":{},"body":{"components/FooterComponent.html":{},"components/UsersListComponent.html":{}}}],["set",{"_index":334,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["sets",{"_index":319,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["shared/directives/navigation",{"_index":291,"title":{},"body":{"components/HeaderComponent.html":{}}}],["shared/enums/user",{"_index":539,"title":{},"body":{"components/UsersListComponent.html":{}}}],["shared/interfaces/user",{"_index":537,"title":{},"body":{"components/UsersListComponent.html":{}}}],["shared/services/data",{"_index":540,"title":{},"body":{"components/UsersListComponent.html":{}}}],["shared/services/user.service",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/UsersListComponent.html":{}}}],["sharereplay",{"_index":183,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["sharereplay(1",{"_index":198,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["signal",{"_index":180,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{},"directives/NavigationLinkDirective.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["signal(false",{"_index":179,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["signal({index",{"_index":433,"title":{},"body":{"injectables/UserService.html":{}}}],["signal({length",{"_index":420,"title":{},"body":{"injectables/UserService.html":{}}}],["signals",{"_index":510,"title":{},"body":{"components/UsersListComponent.html":{}}}],["simple",{"_index":262,"title":{},"body":{"components/FooterComponent.html":{}}}],["single",{"_index":193,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["size",{"_index":566,"title":{},"body":{"components/UsersListComponent.html":{},"miscellaneous/variables.html":{}}}],["slogan",{"_index":374,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["software",{"_index":306,"title":{},"body":{"components/MainComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BaseApiService.html":{},"interfaces/CardInterface.html":{},"injectables/DataUserService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRequestParameters.html":{},"components/MainComponent.html":{},"directives/NavigationLinkDirective.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{},"index.html":{}}}],["sources",{"_index":645,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["specific",{"_index":241,"title":{},"body":{"interfaces/CardInterface.html":{}}}],["src/.../app.config.ts",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":639,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.config.ts",{"_index":589,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/footer/footer.component.ts",{"_index":261,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/components/header/header.component.ts",{"_index":282,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/components/header/header.component.ts:18",{"_index":290,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/main/main.component.ts",{"_index":301,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["src/app/components/users",{"_index":463,"title":{},"body":{"components/UsersListComponent.html":{},"coverage.html":{}}}],["src/app/shared/directives/navigation",{"_index":313,"title":{},"body":{"directives/NavigationLinkDirective.html":{},"coverage.html":{}}}],["src/app/shared/enums/user",{"_index":641,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/interceptors/user",{"_index":597,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/interfaces/card",{"_index":218,"title":{},"body":{"interfaces/CardInterface.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/user",{"_index":344,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{},"coverage.html":{}}}],["src/app/shared/services/api.service.ts",{"_index":6,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/shared/services/api.service.ts:11",{"_index":52,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/services/api.service.ts:13",{"_index":48,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/services/api.service.ts:17",{"_index":20,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/services/api.service.ts:26",{"_index":43,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/services/api.service.ts:35",{"_index":31,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/services/api.service.ts:44",{"_index":46,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/services/api.service.ts:53",{"_index":40,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/services/base",{"_index":119,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{},"coverage.html":{}}}],["src/app/shared/services/data",{"_index":245,"title":{},"body":{"injectables/DataUserService.html":{},"coverage.html":{}}}],["src/app/shared/services/user.service.ts",{"_index":390,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/shared/services/user.service.ts:14",{"_index":429,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:15",{"_index":413,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:21",{"_index":435,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:22",{"_index":419,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:29",{"_index":432,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:30",{"_index":430,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:31",{"_index":431,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:32",{"_index":426,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:33",{"_index":427,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:35",{"_index":402,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:48",{"_index":404,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:72",{"_index":411,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":662,"title":{},"body":{"index.html":{}}}],["started",{"_index":651,"title":{"index.html":{}},"body":{}}],["state",{"_index":436,"title":{},"body":{"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["statements",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["street",{"_index":359,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["string",{"_index":18,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"interfaces/CardInterface.html":{},"interfaces/IRequestParameters.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["strings",{"_index":191,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["structure",{"_index":187,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["structured",{"_index":355,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["styleurl",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/UsersListComponent.html":{}}}],["subject",{"_index":414,"title":{},"body":{"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["subscribe((users",{"_index":552,"title":{},"body":{"components/UsersListComponent.html":{}}}],["subscribe(result",{"_index":576,"title":{},"body":{"components/UsersListComponent.html":{}}}],["subscribe(users",{"_index":548,"title":{},"body":{"components/UsersListComponent.html":{}}}],["suite",{"_index":360,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["symbols",{"_index":631,"title":{},"body":{"dependencies.html":{}}}],["tab",{"_index":384,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"injectables/UserService.html":{},"interfaces/UsersListTabInterface.html":{}}}],["table",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":616,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":472,"title":{},"body":{"components/UsersListComponent.html":{}}}],["tag",{"_index":333,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["takes",{"_index":254,"title":{},"body":{"injectables/DataUserService.html":{}}}],["takeuntil",{"_index":441,"title":{},"body":{"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["takeuntil(this.getusersmessageslistrequestsubject",{"_index":462,"title":{},"body":{"injectables/UserService.html":{}}}],["takeuntil(this.ngunsubscribe",{"_index":547,"title":{},"body":{"components/UsersListComponent.html":{}}}],["takeuntil(this.userservice.getusersmessageslistrequestsubject",{"_index":575,"title":{},"body":{"components/UsersListComponent.html":{}}}],["template",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/UsersListComponent.html":{}}}],["templateurl",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/UsersListComponent.html":{}}}],["terms",{"_index":279,"title":{},"body":{"components/FooterComponent.html":{}}}],["text",{"_index":230,"title":{},"body":{"interfaces/CardInterface.html":{},"directives/NavigationLinkDirective.html":{}}}],["this.apiservice.getinternalusers(param",{"_index":447,"title":{},"body":{"injectables/UserService.html":{}}}],["this.apiservice.getinternalusersmessage",{"_index":460,"title":{},"body":{"injectables/UserService.html":{}}}],["this.apiservice.getoutsourceusers(param",{"_index":448,"title":{},"body":{"injectables/UserService.html":{}}}],["this.apiservice.getoutsourceusersmessage",{"_index":461,"title":{},"body":{"injectables/UserService.html":{}}}],["this.baseapiservice.getdata(euserapi.internalsorce",{"_index":71,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.baseapiservice.getdata(euserapi.outsource",{"_index":70,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.baseapiservice.getdata(eusermessageapi.internalsorce",{"_index":74,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.baseapiservice.getdata(eusermessageapi.outsource",{"_index":73,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.conditionforuserslisteven",{"_index":550,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.conditionforuserslistfull",{"_index":542,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.conditionforuserslistodd",{"_index":544,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.datauserservice.updateuserlists(users",{"_index":578,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.delete(url",{"_index":204,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["this.description",{"_index":340,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["this.fulllistusers",{"_index":543,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.get(url",{"_index":202,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["this.getusersmessageslistrequestsubject.next",{"_index":458,"title":{},"body":{"injectables/UserService.html":{}}}],["this.hostelementref.nativeelement",{"_index":338,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["this.http.delete(url",{"_index":203,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["this.http.get(url",{"_index":195,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["this.http.patch(url",{"_index":205,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["this.http.post(url",{"_index":207,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["this.loader.set(false",{"_index":209,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["this.loader.set(true",{"_index":194,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["this.loaderoff(error",{"_index":200,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["this.navlinks",{"_index":444,"title":{},"body":{"injectables/UserService.html":{}}}],["this.ngunsubscribe.complete",{"_index":582,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.ngunsubscribe.next",{"_index":581,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.pagination().pageindex",{"_index":450,"title":{},"body":{"injectables/UserService.html":{}}}],["this.patch(url",{"_index":206,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["this.popup.message",{"_index":210,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["this.post(url",{"_index":208,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["this.router.navigate(['/users",{"_index":446,"title":{},"body":{"injectables/UserService.html":{}}}],["this.router.url.indexof('/full",{"_index":555,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.router.url.indexof('/users",{"_index":560,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.router.url.indexof('users",{"_index":445,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.getuserslist",{"_index":563,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.userservice.getuserslist({type",{"_index":545,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.userservice.getusersmessageslist",{"_index":574,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.userservice.getusersmessageslistrequestsubject.next",{"_index":573,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.userservice.pagination",{"_index":554,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.userservice.pagination().pageindex",{"_index":565,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.userservice.pagination().pagesize",{"_index":567,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.userservice.pagination.update(plddata",{"_index":571,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.userservice.userslisteven().length",{"_index":562,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.userservice.userslisteven.set(users",{"_index":553,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.userservice.userslisteven.update(users",{"_index":580,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.userservice.userslistfull().length",{"_index":556,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.userservice.userslistfull.set(users",{"_index":568,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.userservice.userslistfull.update(users",{"_index":577,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.userservice.userslistodd().length",{"_index":559,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.userservice.userslistodd.set(users",{"_index":549,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.userservice.userslistodd.update(users",{"_index":579,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.userservice.userslisttab().index",{"_index":557,"title":{},"body":{"components/UsersListComponent.html":{}}}],["this.userslisttab().index",{"_index":418,"title":{},"body":{"injectables/UserService.html":{}}}],["through",{"_index":310,"title":{},"body":{"components/MainComponent.html":{}}}],["throwerror",{"_index":184,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["throwerror(error",{"_index":201,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["timer(4000",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":224,"title":{},"body":{"interfaces/CardInterface.html":{}}}],["top",{"_index":228,"title":{},"body":{"interfaces/CardInterface.html":{}}}],["total",{"_index":379,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["track",{"_index":297,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tracking",{"_index":238,"title":{},"body":{"interfaces/CardInterface.html":{}}}],["tree",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/UsersListComponent.html":{}}}],["triggers",{"_index":494,"title":{},"body":{"components/UsersListComponent.html":{}}}],["true",{"_index":493,"title":{},"body":{"components/UsersListComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":633,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":162,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{}}}],["type",{"_index":24,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"interfaces/CardInterface.html":{},"injectables/DataUserService.html":{},"directives/NavigationLinkDirective.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":235,"title":{},"body":{"interfaces/CardInterface.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["unsubscribing",{"_index":527,"title":{},"body":{"components/UsersListComponent.html":{}}}],["unsubscription",{"_index":522,"title":{},"body":{"components/UsersListComponent.html":{}}}],["up",{"_index":320,"title":{},"body":{"directives/NavigationLinkDirective.html":{}}}],["update",{"_index":322,"title":{},"body":{"directives/NavigationLinkDirective.html":{},"components/UsersListComponent.html":{}}}],["updated",{"_index":255,"title":{},"body":{"injectables/DataUserService.html":{},"directives/NavigationLinkDirective.html":{}}}],["updates",{"_index":252,"title":{},"body":{"injectables/DataUserService.html":{},"components/UsersListComponent.html":{}}}],["updateuserlists",{"_index":247,"title":{},"body":{"injectables/DataUserService.html":{}}}],["updateuserlists(users",{"_index":249,"title":{},"body":{"injectables/DataUserService.html":{}}}],["url",{"_index":145,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{},"components/UsersListComponent.html":{}}}],["used",{"_index":237,"title":{},"body":{"interfaces/CardInterface.html":{},"components/FooterComponent.html":{},"directives/NavigationLinkDirective.html":{},"components/UsersListComponent.html":{}}}],["user",{"_index":242,"title":{},"body":{"interfaces/CardInterface.html":{},"injectables/DataUserService.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{},"miscellaneous/enumerations.html":{}}}],["user's",{"_index":347,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["user.id",{"_index":258,"title":{},"body":{"injectables/DataUserService.html":{}}}],["user.service",{"_index":541,"title":{},"body":{"components/UsersListComponent.html":{}}}],["user.service.ts",{"_index":246,"title":{},"body":{"injectables/DataUserService.html":{},"coverage.html":{}}}],["user.service.ts:17",{"_index":251,"title":{},"body":{"injectables/DataUserService.html":{}}}],["user.service.ts:24",{"_index":248,"title":{},"body":{"injectables/DataUserService.html":{}}}],["useraddressgeointerface",{"_index":343,"title":{"interfaces/UserAddressGeoInterface.html":{}},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{},"coverage.html":{}}}],["useraddressinterface",{"_index":354,"title":{"interfaces/UserAddressInterface.html":{}},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{},"coverage.html":{}}}],["userapiinterceptor",{"_index":599,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercompanyinterface",{"_index":358,"title":{"interfaces/UserCompanyInterface.html":{}},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{},"coverage.html":{}}}],["userid",{"_index":26,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/CardInterface.html":{}}}],["userinterface",{"_index":37,"title":{"interfaces/UserInterface.html":{}},"body":{"injectables/ApiService.html":{},"injectables/DataUserService.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userinterface).id",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userlistresponseinterface",{"_index":376,"title":{"interfaces/UserListResponseInterface.html":{}},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{},"coverage.html":{}}}],["username",{"_index":352,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["users",{"_index":35,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/DataUserService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"interfaces/UsersListTabInterface.html":{},"miscellaneous/variables.html":{}}}],["users.map(user",{"_index":257,"title":{},"body":{"injectables/DataUserService.html":{}}}],["userservice",{"_index":86,"title":{"injectables/UserService.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"coverage.html":{}}}],["userslistcomponent",{"_index":113,"title":{"components/UsersListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/UsersListComponent.html":{},"coverage.html":{}}}],["userslisteven",{"_index":396,"title":{},"body":{"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["userslistfull",{"_index":397,"title":{},"body":{"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["userslistodd",{"_index":398,"title":{},"body":{"injectables/UserService.html":{},"components/UsersListComponent.html":{}}}],["userslisttab",{"_index":399,"title":{},"body":{"injectables/UserService.html":{}}}],["userslisttabinterface",{"_index":385,"title":{"interfaces/UsersListTabInterface.html":{}},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{},"coverage.html":{}}}],["uses",{"_index":467,"title":{},"body":{"components/UsersListComponent.html":{}}}],["using",{"_index":655,"title":{},"body":{"index.html":{}}}],["value",{"_index":50,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BaseApiService.html":{},"components/HeaderComponent.html":{},"interfaces/IRequestParameters.html":{},"directives/NavigationLinkDirective.html":{},"injectables/UserService.html":{},"components/UsersListComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.filter((m",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value.filter(m",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["var",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/UsersListComponent.html":{}}}],["variable",{"_index":178,"title":{},"body":{"injectables/BaseApiService.html":{},"interfaces/IRequestParameters.html":{},"coverage.html":{}}}],["variables",{"_index":684,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":658,"title":{},"body":{"index.html":{},"properties.html":{}}}],["void",{"_index":163,"title":{},"body":{"injectables/BaseApiService.html":{},"components/UsersListComponent.html":{}}}],["website",{"_index":357,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["whenever",{"_index":324,"title":{},"body":{"directives/NavigationLinkDirective.html":{},"index.html":{}}}],["whose",{"_index":511,"title":{},"body":{"components/UsersListComponent.html":{}}}],["withcomponentinputbinding",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withinterceptors",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withrouterconfig({paramsinheritancestrategy",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":148,"title":{},"body":{"injectables/BaseApiService.html":{}}}],["zipcode",{"_index":364,"title":{},"body":{"interfaces/UserAddressGeoInterface.html":{},"interfaces/UserAddressInterface.html":{},"interfaces/UserCompanyInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserListResponseInterface.html":{},"interfaces/UsersListTabInterface.html":{}}}],["zone.js",{"_index":635,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseApiService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInternalUser\n                            \n                            \n                                getInternalUsers\n                            \n                            \n                                getInternalUsersMessage\n                            \n                            \n                                getOutsourceUsers\n                            \n                            \n                                getOutsourceUsersMessage\n                            \n                            \n                                getUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getInternalUser\n                        \n                    \n                \n            \n            \n                \ngetInternalUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/api.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInternalUsers\n                        \n                    \n                \n            \n            \n                \ngetInternalUsers(parameter: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/api.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Method for getting internal users\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parameter\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Observable of UserInterface array\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInternalUsersMessage\n                        \n                    \n                \n            \n            \n                \ngetInternalUsersMessage(parameter: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/api.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Method for getting internal users messages\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parameter\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Observable of UserInterface array\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOutsourceUsers\n                        \n                    \n                \n            \n            \n                \ngetOutsourceUsers(parameter: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/api.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Method for getting outsource users\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parameter\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Observable of UserInterface array\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOutsourceUsersMessage\n                        \n                    \n                \n            \n            \n                \ngetOutsourceUsersMessage(parameter: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/api.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Method for getting outsource users messages\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parameter\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Observable of UserInterface array\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/api.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseApiService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(BaseApiService)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/api.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {inject, Injectable} from '@angular/core';\nimport {UserInterface} from '../interfaces/user-interface';\nimport {Observable} from 'rxjs';\nimport {BaseApiService} from './base-api.service';\nimport {EUserAPI, EUserMessageAPI} from '../enums/user-enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  baseApiService = inject(BaseApiService);\n\n  getUser(userId: string): Observable {\n    return this.baseApiService.getData(EUserAPI.OUTSOURCE, {userId: userId});\n  }\n\n  getInternalUser(userId: string): Observable {\n    return this.baseApiService.getData(EUserAPI.INTERNALSORCE, {userId: userId});\n  }\n\n  /**\n   * Method for getting outsource users\n   * @param parameter\n   * @return Observable of UserInterface array\n   */\n  getOutsourceUsers(parameter: {}): Observable> {\n    return this.baseApiService.getData(EUserAPI.OUTSOURCE, parameter);\n  }\n\n  /**\n   * Method for getting internal users\n   * @param parameter\n   * @return Observable of UserInterface array\n   */\n  getInternalUsers(parameter: {}): Observable> {\n    return this.baseApiService.getData(EUserAPI.INTERNALSORCE, parameter);\n  }\n\n  /**\n   * Method for getting outsource users messages\n   * @param parameter\n   * @return Observable of UserInterface array\n   */\n  getOutsourceUsersMessage(parameter: {}): Observable> {\n    return this.baseApiService.getData(EUserMessageAPI.OUTSOURCE, parameter);\n  }\n\n  /**\n   * Method for getting internal users messages\n   * @param parameter\n   * @return Observable of UserInterface array\n   */\n  getInternalUsersMessage(parameter: {}): Observable> {\n    return this.baseApiService.getData(EUserMessageAPI.INTERNALSORCE, parameter);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                UserService\n                \n            \n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                            RouterModule\n                                HeaderComponent\n                                FooterComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet, RouterModule} from '@angular/router';\nimport {HeaderComponent} from './components/header/header.component';\nimport {UserService} from './shared/services/user.service';\nimport {FooterComponent} from './components/footer/footer.component';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet, RouterModule, HeaderComponent, FooterComponent],\n  providers: [UserService],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'UsersListComponent', 'selector': 'app-users-list'}];\n    var DIRECTIVES = [{'name': 'NavigationLinkDirective', 'selector': 'a[appNavigationLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseApiService.html":{"url":"injectables/BaseApiService.html","title":"injectable - BaseApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/base-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                http\n                            \n                            \n                                    Public\n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                delete\n                            \n                            \n                                deleteData\n                            \n                            \n                                    Private\n                                get\n                            \n                            \n                                getData\n                            \n                            \n                                    Private\n                                loaderOff\n                            \n                            \n                                    Private\n                                patch\n                            \n                            \n                                patchData\n                            \n                            \n                                    Private\n                                post\n                            \n                            \n                                postData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/base-api.service.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(url: string, parameters?: IRequestParameters)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/base-api.service.ts:67\n                        \n                    \n\n\n            \n                \n                        General api method for deleting data from the API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe URL to send the DELETE request to.\n\n\n                                            \n                                        \n                                        \n                                                parameters\n                                            \n                                                            IRequestParameters\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional parameters to include in the request.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the response from the API.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteData\n                        \n                    \n                \n            \n            \n                \ndeleteData(url: string, parameters?: IRequestParameters)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/base-api.service.ts:85\n                        \n                    \n\n\n            \n                \n                        General api method for deleting data from the API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            IRequestParameters\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the response from the API.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(url: string, parameters?: IRequestParameters)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/base-api.service.ts:38\n                        \n                    \n\n\n            \n                \n                        General api method for getting data from the API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe URL to send the GET request to.\n\n\n                                            \n                                        \n                                        \n                                                parameters\n                                            \n                                                            IRequestParameters\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional parameters to include in the request.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the response from the API.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData(url: string, parameters?: IRequestParameters)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/base-api.service.ts:56\n                        \n                    \n\n\n            \n                \n                        General api method for getting data from the API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            IRequestParameters\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the response from the API.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loaderOff\n                        \n                    \n                \n            \n            \n                \n                        \n                    loaderOff(error?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/base-api.service.ts:154\n                        \n                    \n\n\n            \n                \n                        Method to control error response and turn off the loader.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        patch\n                        \n                    \n                \n            \n            \n                \n                        \n                    patch(url: string, body?: any, parameters?: IRequestParameters)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/base-api.service.ts:97\n                        \n                    \n\n\n            \n                \n                        General api method for patching data from the API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe URL to send the PATCH request to.\n\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nThe body of the request, if any.\n\n\n                                            \n                                        \n                                        \n                                                parameters\n                                            \n                                                            IRequestParameters\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional parameters to include in the request.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the response from the API.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patchData\n                        \n                    \n                \n            \n            \n                \npatchData(url: string, body?: any, parameters?: IRequestParameters)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/base-api.service.ts:115\n                        \n                    \n\n\n            \n                \n                        General api method for patching data from the API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nThe body of the request, if any.\n\n\n                                            \n                                        \n                                        \n                                                parameters\n                                            \n                                                            IRequestParameters\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the response from the API.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(url: string, body?: any, parameters?: IRequestParameters)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/base-api.service.ts:127\n                        \n                    \n\n\n            \n                \n                        General api method for posting data from the API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe URL to send the POST request to.\n\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nThe body of the request, if any.\n\n\n                                            \n                                        \n                                        \n                                                parameters\n                                            \n                                                            IRequestParameters\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional parameters to include in the request.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the response from the API.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postData\n                        \n                    \n                \n            \n            \n                \npostData(url: string, body?: any, parameters?: IRequestParameters)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/base-api.service.ts:145\n                        \n                    \n\n\n            \n                \n                        General api method for posting data from the API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nThe body of the request, if any.\n\n\n                                            \n                                        \n                                        \n                                                parameters\n                                            \n                                                            IRequestParameters\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional parameters to include in the request.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the response from the API.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpClient\n\n                    \n                \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/base-api.service.ts:29\n                        \n                    \n\n            \n                \n                    Variable\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/base-api.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {inject, Injectable, signal} from '@angular/core';\nimport {catchError, map, Observable, shareReplay, throwError} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\n\n/**\n * Interface for request parameters.\n * This interface defines the structure of the parameters that can be passed to API requests.\n * Each parameter can be a string or an array of strings.\n * @interface IRequestParameters\n * @property {string} [param] - The name of the parameter.\n * @property {string | string[]} [param] - The value of the parameter, which can be a single string or an array of strings.\n */\nexport interface IRequestParameters {\n  [param: string]: string | string[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseApiService {\n  public loader = signal(false);\n\n  constructor() { }\n\n  /**\n   * Variable\n   * @protected\n   */\n  protected readonly http: HttpClient = inject(HttpClient);\n\n  /**\n   * General api method for getting data from the API.\n   * @param url - The URL to send the GET request to.\n   * @param parameters - Optional parameters to include in the request.\n   * @return An Observable that emits the response from the API.\n   * @private\n   */\n  private get(url: string, parameters?: IRequestParameters): Observable {\n    this.loader.set(true);\n    return this.http.get(url, { params: parameters })\n      .pipe(\n        shareReplay(1),\n        catchError(error => {\n          this.loaderOff(error);\n          return throwError(error);\n        }),\n      );\n  }\n\n  /**\n   * General api method for getting data from the API.\n   * @param url\n   * @param parameters\n   * @return An Observable that emits the response from the API.\n   */\n  getData(url: string, parameters?: IRequestParameters): Observable {\n    return this.get(url, parameters);\n  }\n\n  /**\n   * General api method for deleting data from the API.\n   * @param url - The URL to send the DELETE request to.\n   * @param parameters - Optional parameters to include in the request.\n   * @return An Observable that emits the response from the API.\n   * @private\n   */\n  private delete(url: string, parameters?: IRequestParameters): Observable {\n    this.loader.set(true);\n    return this.http.delete(url, { params: parameters })\n      .pipe(\n        shareReplay(1),\n        catchError(error => {\n          this.loaderOff(error);\n          return throwError(error);\n        }),\n      );\n  }\n\n  /**\n   * General api method for deleting data from the API.\n   * @param url\n   * @param parameters\n   * @return An Observable that emits the response from the API.\n   */\n  deleteData(url: string, parameters?: IRequestParameters): Observable {\n    return this.delete(url, parameters);\n  }\n\n  /**\n   * General api method for patching data from the API.\n   * @param url - The URL to send the PATCH request to.\n   * @param body - The body of the request, if any.\n   * @param parameters - Optional parameters to include in the request.\n   * @return An Observable that emits the response from the API.\n   * @private\n   */\n  private patch(url: string, body?: any, parameters?: IRequestParameters): Observable {\n    this.loader.set(true);\n    return this.http.patch(url, body, { params: parameters })\n      .pipe(\n        catchError(error => {\n          this.loaderOff(error);\n          return throwError(error);\n        }),\n      );\n  }\n\n  /**\n   * General api method for patching data from the API.\n   * @param url\n   * @param parameters\n   * @param body - The body of the request, if any.\n   * @return An Observable that emits the response from the API.\n   */\n  patchData(url: string, body?: any, parameters?: IRequestParameters): Observable {\n    return this.patch(url, body, parameters);\n  }\n\n  /**\n   * General api method for posting data from the API.\n   * @param url - The URL to send the POST request to.\n   * @param body - The body of the request, if any.\n   * @param parameters - Optional parameters to include in the request.\n   * @return An Observable that emits the response from the API.\n   * @private\n   */\n  private post(url: string, body?: any, parameters?: IRequestParameters): Observable {\n    this.loader.set(true);\n    return this.http.post(url, body, { params: parameters })\n      .pipe(\n        catchError(error => {\n          this.loaderOff(error);\n          return throwError(error);\n        }),\n      );\n  }\n\n  /**\n   * General api method for posting data from the API.\n   * @param url\n   * @param body - The body of the request, if any.\n   * @param parameters - Optional parameters to include in the request.\n   * @return An Observable that emits the response from the API.\n   */\n  postData(url: string, body?: any, parameters?: IRequestParameters): Observable {\n    return this.post(url, body, parameters);\n  }\n\n  /**\n   * Method to control error response and turn off the loader.\n   * @param error\n   * @private\n   */\n  private loaderOff(error?: any) {\n    this.loader.set(false);\n    // this.popup.message$ = (error && error.error && error.error.Errors)\n    //   ? error.error.Errors[0].Title + ' ' + error.error.Errors[0].Details[0]\n    //   : 'Failed request!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardInterface.html":{"url":"interfaces/CardInterface.html","title":"interface - CardInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CardInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/card-interface.ts\n        \n\n\n            \n                Description\n            \n            \n                CardComponent is a reusable component that displays a card with a title and content.\n\n@interface CardInterface\n@property {string} [title] - The title of the card, which is displayed prominently at the top.\n@property {string} [body] - The main content of the card, which can include text, images, or other elements.\n@property {number} id - A unique identifier for the card, which can be used for tracking or referencing the card in a list.\n\n@property {number} [userId] - An optional property that can be used to associate the card with a specific user, if applicable.\n\n\n\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CardInterface {\n  title?: string;\n  body?: string;\n  id: number;\n  userId?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataUserService.html":{"url":"injectables/DataUserService.html","title":"injectable - DataUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/data-user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateUserLists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/data-user.service.ts:24\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserLists\n                        \n                    \n                \n            \n            \n                \nupdateUserLists(users: UserInterface[], data: number, result: CardInterface[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/data-user.service.ts:17\n                        \n                    \n\n\n            \n                \n                        This method updates the user list with new messages.\nIt takes an array of users, a user ID, and an array of messages.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                users\n                                            \n                                                            UserInterface[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                result\n                                            \n                                                            CardInterface[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         UserInterface[]\n\n                        \n                            \n                                \nReturns the updated list of users with their messages.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {UserInterface} from '../interfaces/user-interface';\nimport {CardInterface} from '../interfaces/card-interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataUserService {\n  /**\n   * This method updates the user list with new messages.\n   * It takes an array of users, a user ID, and an array of messages.\n   * @param users\n   * @param data\n   * @param result\n   * @return {UserInterface[]} - Returns the updated list of users with their messages.\n   */\n  updateUserLists(users: UserInterface[], data:  number, result: CardInterface[]): UserInterface[] {\n    return users.map(user => {\n      if (user.id === data) {\n        return {...user, messages: result.filter(message => message.userId === user.id)};\n      }\n      return user;\n    });\n  }\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/footer/footer.component.ts\n\n\n\n    \n        Description\n    \n    \n        FooterComponent is a simple component that represents the footer of the application.\nIt is used to display copyright information or other footer-related content.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * FooterComponent is a simple component that represents the footer of the application.\n * It is used to display copyright information or other footer-related content.\n */\n@Component({\n  selector: 'app-footer',\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss'\n})\nexport class FooterComponent {\n\n}\n\n    \n\n    \n        \n  \n    &copy; 2023 Your Company. All rights reserved.\n    \n      Privacy Policy\n      Terms of Service\n      Contact\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      © 2023 Your Company. All rights reserved.          Privacy Policy      Terms of Service      Contact      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'UsersListComponent', 'selector': 'app-users-list'}];\n    var DIRECTIVES = [{'name': 'NavigationLinkDirective', 'selector': 'a[appNavigationLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n            \n                imports\n                \n                            RouterLink\n                                NavigationLinkDirective\n                            ButtonComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/header/header.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, inject} from '@angular/core';\nimport {RouterLink} from '@angular/router';\nimport {NavigationLinkDirective} from '../../shared/directives/navigation-link.directive';\nimport {ButtonComponent} from '../../../../projects/shared-components/src/lib/button/button.component';\nimport {UserService} from '../../shared/services/user.service';\n\n@Component({\n  selector: 'app-header',\n  imports: [\n    RouterLink,\n    NavigationLinkDirective,\n    ButtonComponent\n  ],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss'\n})\nexport class HeaderComponent {\n  dataService = inject(UserService);\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    @for (link of dataService.navLinks(); track link.href) {\n      \n    }\n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              @for (link of dataService.navLinks(); track link.href) {          }    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'UsersListComponent', 'selector': 'app-users-list'}];\n    var DIRECTIVES = [{'name': 'NavigationLinkDirective', 'selector': 'a[appNavigationLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRequestParameters.html":{"url":"interfaces/IRequestParameters.html","title":"interface - IRequestParameters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRequestParameters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/base-api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for request parameters.\nThis interface defines the structure of the parameters that can be passed to API requests.\nEach parameter can be a string or an array of strings.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [param: string]:    string | []\n\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/base-api.service.ts:13\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import {inject, Injectable, signal} from '@angular/core';\nimport {catchError, map, Observable, shareReplay, throwError} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\n\n/**\n * Interface for request parameters.\n * This interface defines the structure of the parameters that can be passed to API requests.\n * Each parameter can be a string or an array of strings.\n * @interface IRequestParameters\n * @property {string} [param] - The name of the parameter.\n * @property {string | string[]} [param] - The value of the parameter, which can be a single string or an array of strings.\n */\nexport interface IRequestParameters {\n  [param: string]: string | string[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseApiService {\n  public loader = signal(false);\n\n  constructor() { }\n\n  /**\n   * Variable\n   * @protected\n   */\n  protected readonly http: HttpClient = inject(HttpClient);\n\n  /**\n   * General api method for getting data from the API.\n   * @param url - The URL to send the GET request to.\n   * @param parameters - Optional parameters to include in the request.\n   * @return An Observable that emits the response from the API.\n   * @private\n   */\n  private get(url: string, parameters?: IRequestParameters): Observable {\n    this.loader.set(true);\n    return this.http.get(url, { params: parameters })\n      .pipe(\n        shareReplay(1),\n        catchError(error => {\n          this.loaderOff(error);\n          return throwError(error);\n        }),\n      );\n  }\n\n  /**\n   * General api method for getting data from the API.\n   * @param url\n   * @param parameters\n   * @return An Observable that emits the response from the API.\n   */\n  getData(url: string, parameters?: IRequestParameters): Observable {\n    return this.get(url, parameters);\n  }\n\n  /**\n   * General api method for deleting data from the API.\n   * @param url - The URL to send the DELETE request to.\n   * @param parameters - Optional parameters to include in the request.\n   * @return An Observable that emits the response from the API.\n   * @private\n   */\n  private delete(url: string, parameters?: IRequestParameters): Observable {\n    this.loader.set(true);\n    return this.http.delete(url, { params: parameters })\n      .pipe(\n        shareReplay(1),\n        catchError(error => {\n          this.loaderOff(error);\n          return throwError(error);\n        }),\n      );\n  }\n\n  /**\n   * General api method for deleting data from the API.\n   * @param url\n   * @param parameters\n   * @return An Observable that emits the response from the API.\n   */\n  deleteData(url: string, parameters?: IRequestParameters): Observable {\n    return this.delete(url, parameters);\n  }\n\n  /**\n   * General api method for patching data from the API.\n   * @param url - The URL to send the PATCH request to.\n   * @param body - The body of the request, if any.\n   * @param parameters - Optional parameters to include in the request.\n   * @return An Observable that emits the response from the API.\n   * @private\n   */\n  private patch(url: string, body?: any, parameters?: IRequestParameters): Observable {\n    this.loader.set(true);\n    return this.http.patch(url, body, { params: parameters })\n      .pipe(\n        catchError(error => {\n          this.loaderOff(error);\n          return throwError(error);\n        }),\n      );\n  }\n\n  /**\n   * General api method for patching data from the API.\n   * @param url\n   * @param parameters\n   * @param body - The body of the request, if any.\n   * @return An Observable that emits the response from the API.\n   */\n  patchData(url: string, body?: any, parameters?: IRequestParameters): Observable {\n    return this.patch(url, body, parameters);\n  }\n\n  /**\n   * General api method for posting data from the API.\n   * @param url - The URL to send the POST request to.\n   * @param body - The body of the request, if any.\n   * @param parameters - Optional parameters to include in the request.\n   * @return An Observable that emits the response from the API.\n   * @private\n   */\n  private post(url: string, body?: any, parameters?: IRequestParameters): Observable {\n    this.loader.set(true);\n    return this.http.post(url, body, { params: parameters })\n      .pipe(\n        catchError(error => {\n          this.loaderOff(error);\n          return throwError(error);\n        }),\n      );\n  }\n\n  /**\n   * General api method for posting data from the API.\n   * @param url\n   * @param body - The body of the request, if any.\n   * @param parameters - Optional parameters to include in the request.\n   * @return An Observable that emits the response from the API.\n   */\n  postData(url: string, body?: any, parameters?: IRequestParameters): Observable {\n    return this.post(url, body, parameters);\n  }\n\n  /**\n   * Method to control error response and turn off the loader.\n   * @param error\n   * @private\n   */\n  private loaderOff(error?: any) {\n    this.loader.set(false);\n    // this.popup.message$ = (error && error.error && error.error.Errors)\n    //   ? error.error.Errors[0].Title + ' ' + error.error.Errors[0].Details[0]\n    //   : 'Failed request!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/main/main.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n\n            \n                styleUrl\n                ./main.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  imports: [],\n  templateUrl: './main.component.html',\n  styleUrl: './main.component.scss'\n})\nexport class MainComponent {\n}\n\n    \n\n    \n        Embedded iPaaS Software to Elevate ITSM and ESM Through Rapid Integration and so on.....\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Embedded iPaaS Software to Elevate ITSM and ESM Through Rapid Integration and so on.....'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'UsersListComponent', 'selector': 'app-users-list'}];\n    var DIRECTIVES = [{'name': 'NavigationLinkDirective', 'selector': 'a[appNavigationLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NavigationLinkDirective.html":{"url":"directives/NavigationLinkDirective.html","title":"directive - NavigationLinkDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NavigationLinkDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/navigation-link.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive to create a navigation link with a description.\n\n            \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        a[appNavigationLink]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Private\n                                hostElementRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/directives/navigation-link.directive.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor that sets up an effect to update the link's text and class\nwhenever the description changes.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('Menu')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/directives/navigation-link.directive.ts:16\n                        \n                    \n\n            \n                \n                    The description of the navigation link.\nThis is a signal that can be updated to change the link's text.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hostElementRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(ElementRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/directives/navigation-link.directive.ts:25\n                        \n                    \n\n            \n                \n                    Reference to the host element (the anchor tag).\nThis is used to set the text and class of the link.\n\n                \n            \n\n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, effect, ElementRef, inject, input} from '@angular/core';\n\n/**\n * Directive to create a navigation link with a description.\n */\n@Directive({\n  selector: 'a[appNavigationLink]'\n})\nexport class NavigationLinkDirective {\n\n  /**\n   * The description of the navigation link.\n   * This is a signal that can be updated to change the link's text.\n   * @input\n   */\n  description = input('Menu');\n\n  /**\n   * Reference to the host element (the anchor tag).\n   * This is used to set the text and class of the link.\n   * @private\n   * @type {ElementRef}\n   * @inject ElementRef\n   */\n  private hostElementRef = inject>(ElementRef);\n\n  /**\n   * Constructor that sets up an effect to update the link's text and class\n   * whenever the description changes.\n   * @constructor\n   */\n  constructor() {\n    effect(() => {\n      const element = this.hostElementRef.nativeElement;\n      element.text = this.description();\n      element.className = \"header__nav-link\";\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserAddressGeoInterface.html":{"url":"interfaces/UserAddressGeoInterface.html","title":"interface - UserAddressGeoInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserAddressGeoInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/user-interface.ts\n        \n\n\n            \n                Description\n            \n            \n                User Address Geo Interface\nThis interface defines the structure of a user's address geo object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            lat\n                                        \n                                \n                                \n                                        \n                                            lng\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lng\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lng:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {CardInterface} from './card-interface';\n\n/**\n * User Interface\n * This interface defines the structure of a user object\n * @interface UserInterface\n * @property {number} id - The unique identifier for the user\n * @property {string} name - The full name of the user\n * @property {string} username - The username of the user\n * @property {string} email - The email address of the user\n * @property {UserAddressInterface} address - The address of the user, structured as a UserAddressInterface\n * @property {string} phone - The phone number of the user\n * @property {string} website - The website of the user\n * @property {UserCompanyInterface} company - The company information of the user, structured as a UserCompanyInterface\n */\nexport interface UserInterface {\n  \"id\": number,\n  \"name\": string,\n  \"username\": string,\n  \"email\": string,\n  \"address\": UserAddressInterface,\n  \"phone\": string,\n  \"website\": string,\n  \"company\": UserCompanyInterface,\n  \"messages\": CardInterface[]\n}\n\n/**\n * User Address Interface\n * This interface defines the structure of a user's address object\n * @interface UserAddressInterface\n * @property {string} street - The street address of the user\n * @property {string} suite - The suite or apartment number of the user\n * @property {string} city - The city where the user resides\n * @property {string} zipcode - The postal code of the user's address\n * @property {UserAddressGeoInterface} geo - The geographical coordinates of the user's address\n */\nexport interface UserAddressInterface {\n  \"street\": string,\n  \"suite\": string,\n  \"city\": string,\n  \"zipcode\": string,\n  \"geo\": UserAddressGeoInterface\n}\n\n/**\n * User Address Geo Interface\n * This interface defines the structure of a user's address geo object\n * @interface UserAddressGeoInterface\n * @property {string} lat - The latitude of the address\n * @property {string} lng - The longitude of the address\n */\nexport interface UserAddressGeoInterface {\n  \"lat\": string,\n  \"lng\": string\n}\n\n/**\n * User Company Interface\n * This interface defines the structure of a user's company object\n * @interface UserCompanyInterface\n * @property {string} name - The name of the company\n * @property {string} catchPhrase - A catchphrase for the company\n * @property {string} bs - A business slogan or description\n */\nexport interface UserCompanyInterface {\n  \"name\": string,\n  \"catchPhrase\": string,\n  \"bs\": string\n}\n\n/**\n * User List Response Interface\n * This interface defines the structure of a response containing a list of users\n * @interface UserListResponseInterface\n * @property {UserInterface[]} users - An array of UserInterface objects representing the users\n * @property {number} total - The total number of users\n * @property {number} page - The current page number\n * @property {number} perPage - The number of users per page\n */\nexport interface UserListResponseInterface {\n  \"users\": UserInterface[];\n  \"total\": number;\n  \"page\": number;\n  \"perPage\": number;\n}\n\n/**\n * Users List Tab Interface\n * This interface defines the structure of a users list tab object\n * @interface UsersListTabInterface\n * @property {0} 'odd' - Represents the odd users list tab\n * @property {1} 'even' - Represents the even users list tab\n */\nexport interface UsersListTabInterface {\n  0: 'odd';\n  1: 'even';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserAddressInterface.html":{"url":"interfaces/UserAddressInterface.html","title":"interface - UserAddressInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserAddressInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/user-interface.ts\n        \n\n\n            \n                Description\n            \n            \n                User Address Interface\nThis interface defines the structure of a user's address object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            geo\n                                        \n                                \n                                \n                                        \n                                            street\n                                        \n                                \n                                \n                                        \n                                            suite\n                                        \n                                \n                                \n                                        \n                                            zipcode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        geo:         UserAddressGeoInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserAddressGeoInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        suite:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipcode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zipcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {CardInterface} from './card-interface';\n\n/**\n * User Interface\n * This interface defines the structure of a user object\n * @interface UserInterface\n * @property {number} id - The unique identifier for the user\n * @property {string} name - The full name of the user\n * @property {string} username - The username of the user\n * @property {string} email - The email address of the user\n * @property {UserAddressInterface} address - The address of the user, structured as a UserAddressInterface\n * @property {string} phone - The phone number of the user\n * @property {string} website - The website of the user\n * @property {UserCompanyInterface} company - The company information of the user, structured as a UserCompanyInterface\n */\nexport interface UserInterface {\n  \"id\": number,\n  \"name\": string,\n  \"username\": string,\n  \"email\": string,\n  \"address\": UserAddressInterface,\n  \"phone\": string,\n  \"website\": string,\n  \"company\": UserCompanyInterface,\n  \"messages\": CardInterface[]\n}\n\n/**\n * User Address Interface\n * This interface defines the structure of a user's address object\n * @interface UserAddressInterface\n * @property {string} street - The street address of the user\n * @property {string} suite - The suite or apartment number of the user\n * @property {string} city - The city where the user resides\n * @property {string} zipcode - The postal code of the user's address\n * @property {UserAddressGeoInterface} geo - The geographical coordinates of the user's address\n */\nexport interface UserAddressInterface {\n  \"street\": string,\n  \"suite\": string,\n  \"city\": string,\n  \"zipcode\": string,\n  \"geo\": UserAddressGeoInterface\n}\n\n/**\n * User Address Geo Interface\n * This interface defines the structure of a user's address geo object\n * @interface UserAddressGeoInterface\n * @property {string} lat - The latitude of the address\n * @property {string} lng - The longitude of the address\n */\nexport interface UserAddressGeoInterface {\n  \"lat\": string,\n  \"lng\": string\n}\n\n/**\n * User Company Interface\n * This interface defines the structure of a user's company object\n * @interface UserCompanyInterface\n * @property {string} name - The name of the company\n * @property {string} catchPhrase - A catchphrase for the company\n * @property {string} bs - A business slogan or description\n */\nexport interface UserCompanyInterface {\n  \"name\": string,\n  \"catchPhrase\": string,\n  \"bs\": string\n}\n\n/**\n * User List Response Interface\n * This interface defines the structure of a response containing a list of users\n * @interface UserListResponseInterface\n * @property {UserInterface[]} users - An array of UserInterface objects representing the users\n * @property {number} total - The total number of users\n * @property {number} page - The current page number\n * @property {number} perPage - The number of users per page\n */\nexport interface UserListResponseInterface {\n  \"users\": UserInterface[];\n  \"total\": number;\n  \"page\": number;\n  \"perPage\": number;\n}\n\n/**\n * Users List Tab Interface\n * This interface defines the structure of a users list tab object\n * @interface UsersListTabInterface\n * @property {0} 'odd' - Represents the odd users list tab\n * @property {1} 'even' - Represents the even users list tab\n */\nexport interface UsersListTabInterface {\n  0: 'odd';\n  1: 'even';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCompanyInterface.html":{"url":"interfaces/UserCompanyInterface.html","title":"interface - UserCompanyInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserCompanyInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/user-interface.ts\n        \n\n\n            \n                Description\n            \n            \n                User Company Interface\nThis interface defines the structure of a user's company object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bs\n                                        \n                                \n                                \n                                        \n                                            catchPhrase\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bs:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        catchPhrase\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        catchPhrase:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {CardInterface} from './card-interface';\n\n/**\n * User Interface\n * This interface defines the structure of a user object\n * @interface UserInterface\n * @property {number} id - The unique identifier for the user\n * @property {string} name - The full name of the user\n * @property {string} username - The username of the user\n * @property {string} email - The email address of the user\n * @property {UserAddressInterface} address - The address of the user, structured as a UserAddressInterface\n * @property {string} phone - The phone number of the user\n * @property {string} website - The website of the user\n * @property {UserCompanyInterface} company - The company information of the user, structured as a UserCompanyInterface\n */\nexport interface UserInterface {\n  \"id\": number,\n  \"name\": string,\n  \"username\": string,\n  \"email\": string,\n  \"address\": UserAddressInterface,\n  \"phone\": string,\n  \"website\": string,\n  \"company\": UserCompanyInterface,\n  \"messages\": CardInterface[]\n}\n\n/**\n * User Address Interface\n * This interface defines the structure of a user's address object\n * @interface UserAddressInterface\n * @property {string} street - The street address of the user\n * @property {string} suite - The suite or apartment number of the user\n * @property {string} city - The city where the user resides\n * @property {string} zipcode - The postal code of the user's address\n * @property {UserAddressGeoInterface} geo - The geographical coordinates of the user's address\n */\nexport interface UserAddressInterface {\n  \"street\": string,\n  \"suite\": string,\n  \"city\": string,\n  \"zipcode\": string,\n  \"geo\": UserAddressGeoInterface\n}\n\n/**\n * User Address Geo Interface\n * This interface defines the structure of a user's address geo object\n * @interface UserAddressGeoInterface\n * @property {string} lat - The latitude of the address\n * @property {string} lng - The longitude of the address\n */\nexport interface UserAddressGeoInterface {\n  \"lat\": string,\n  \"lng\": string\n}\n\n/**\n * User Company Interface\n * This interface defines the structure of a user's company object\n * @interface UserCompanyInterface\n * @property {string} name - The name of the company\n * @property {string} catchPhrase - A catchphrase for the company\n * @property {string} bs - A business slogan or description\n */\nexport interface UserCompanyInterface {\n  \"name\": string,\n  \"catchPhrase\": string,\n  \"bs\": string\n}\n\n/**\n * User List Response Interface\n * This interface defines the structure of a response containing a list of users\n * @interface UserListResponseInterface\n * @property {UserInterface[]} users - An array of UserInterface objects representing the users\n * @property {number} total - The total number of users\n * @property {number} page - The current page number\n * @property {number} perPage - The number of users per page\n */\nexport interface UserListResponseInterface {\n  \"users\": UserInterface[];\n  \"total\": number;\n  \"page\": number;\n  \"perPage\": number;\n}\n\n/**\n * Users List Tab Interface\n * This interface defines the structure of a users list tab object\n * @interface UsersListTabInterface\n * @property {0} 'odd' - Represents the odd users list tab\n * @property {1} 'even' - Represents the even users list tab\n */\nexport interface UsersListTabInterface {\n  0: 'odd';\n  1: 'even';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInterface.html":{"url":"interfaces/UserInterface.html","title":"interface - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/user-interface.ts\n        \n\n\n            \n                Description\n            \n            \n                User Interface\nThis interface defines the structure of a user object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            company\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            messages\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                                \n                                        \n                                            website\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         UserAddressInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserAddressInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        company\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        company:         UserCompanyInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserCompanyInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messages:         CardInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        website\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        website:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {CardInterface} from './card-interface';\n\n/**\n * User Interface\n * This interface defines the structure of a user object\n * @interface UserInterface\n * @property {number} id - The unique identifier for the user\n * @property {string} name - The full name of the user\n * @property {string} username - The username of the user\n * @property {string} email - The email address of the user\n * @property {UserAddressInterface} address - The address of the user, structured as a UserAddressInterface\n * @property {string} phone - The phone number of the user\n * @property {string} website - The website of the user\n * @property {UserCompanyInterface} company - The company information of the user, structured as a UserCompanyInterface\n */\nexport interface UserInterface {\n  \"id\": number,\n  \"name\": string,\n  \"username\": string,\n  \"email\": string,\n  \"address\": UserAddressInterface,\n  \"phone\": string,\n  \"website\": string,\n  \"company\": UserCompanyInterface,\n  \"messages\": CardInterface[]\n}\n\n/**\n * User Address Interface\n * This interface defines the structure of a user's address object\n * @interface UserAddressInterface\n * @property {string} street - The street address of the user\n * @property {string} suite - The suite or apartment number of the user\n * @property {string} city - The city where the user resides\n * @property {string} zipcode - The postal code of the user's address\n * @property {UserAddressGeoInterface} geo - The geographical coordinates of the user's address\n */\nexport interface UserAddressInterface {\n  \"street\": string,\n  \"suite\": string,\n  \"city\": string,\n  \"zipcode\": string,\n  \"geo\": UserAddressGeoInterface\n}\n\n/**\n * User Address Geo Interface\n * This interface defines the structure of a user's address geo object\n * @interface UserAddressGeoInterface\n * @property {string} lat - The latitude of the address\n * @property {string} lng - The longitude of the address\n */\nexport interface UserAddressGeoInterface {\n  \"lat\": string,\n  \"lng\": string\n}\n\n/**\n * User Company Interface\n * This interface defines the structure of a user's company object\n * @interface UserCompanyInterface\n * @property {string} name - The name of the company\n * @property {string} catchPhrase - A catchphrase for the company\n * @property {string} bs - A business slogan or description\n */\nexport interface UserCompanyInterface {\n  \"name\": string,\n  \"catchPhrase\": string,\n  \"bs\": string\n}\n\n/**\n * User List Response Interface\n * This interface defines the structure of a response containing a list of users\n * @interface UserListResponseInterface\n * @property {UserInterface[]} users - An array of UserInterface objects representing the users\n * @property {number} total - The total number of users\n * @property {number} page - The current page number\n * @property {number} perPage - The number of users per page\n */\nexport interface UserListResponseInterface {\n  \"users\": UserInterface[];\n  \"total\": number;\n  \"page\": number;\n  \"perPage\": number;\n}\n\n/**\n * Users List Tab Interface\n * This interface defines the structure of a users list tab object\n * @interface UsersListTabInterface\n * @property {0} 'odd' - Represents the odd users list tab\n * @property {1} 'even' - Represents the even users list tab\n */\nexport interface UsersListTabInterface {\n  0: 'odd';\n  1: 'even';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserListResponseInterface.html":{"url":"interfaces/UserListResponseInterface.html","title":"interface - UserListResponseInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserListResponseInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/user-interface.ts\n        \n\n\n            \n                Description\n            \n            \n                User List Response Interface\nThis interface defines the structure of a response containing a list of users\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            perPage\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                                \n                                        \n                                            users\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        perPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        perPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        users:         UserInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {CardInterface} from './card-interface';\n\n/**\n * User Interface\n * This interface defines the structure of a user object\n * @interface UserInterface\n * @property {number} id - The unique identifier for the user\n * @property {string} name - The full name of the user\n * @property {string} username - The username of the user\n * @property {string} email - The email address of the user\n * @property {UserAddressInterface} address - The address of the user, structured as a UserAddressInterface\n * @property {string} phone - The phone number of the user\n * @property {string} website - The website of the user\n * @property {UserCompanyInterface} company - The company information of the user, structured as a UserCompanyInterface\n */\nexport interface UserInterface {\n  \"id\": number,\n  \"name\": string,\n  \"username\": string,\n  \"email\": string,\n  \"address\": UserAddressInterface,\n  \"phone\": string,\n  \"website\": string,\n  \"company\": UserCompanyInterface,\n  \"messages\": CardInterface[]\n}\n\n/**\n * User Address Interface\n * This interface defines the structure of a user's address object\n * @interface UserAddressInterface\n * @property {string} street - The street address of the user\n * @property {string} suite - The suite or apartment number of the user\n * @property {string} city - The city where the user resides\n * @property {string} zipcode - The postal code of the user's address\n * @property {UserAddressGeoInterface} geo - The geographical coordinates of the user's address\n */\nexport interface UserAddressInterface {\n  \"street\": string,\n  \"suite\": string,\n  \"city\": string,\n  \"zipcode\": string,\n  \"geo\": UserAddressGeoInterface\n}\n\n/**\n * User Address Geo Interface\n * This interface defines the structure of a user's address geo object\n * @interface UserAddressGeoInterface\n * @property {string} lat - The latitude of the address\n * @property {string} lng - The longitude of the address\n */\nexport interface UserAddressGeoInterface {\n  \"lat\": string,\n  \"lng\": string\n}\n\n/**\n * User Company Interface\n * This interface defines the structure of a user's company object\n * @interface UserCompanyInterface\n * @property {string} name - The name of the company\n * @property {string} catchPhrase - A catchphrase for the company\n * @property {string} bs - A business slogan or description\n */\nexport interface UserCompanyInterface {\n  \"name\": string,\n  \"catchPhrase\": string,\n  \"bs\": string\n}\n\n/**\n * User List Response Interface\n * This interface defines the structure of a response containing a list of users\n * @interface UserListResponseInterface\n * @property {UserInterface[]} users - An array of UserInterface objects representing the users\n * @property {number} total - The total number of users\n * @property {number} page - The current page number\n * @property {number} perPage - The number of users per page\n */\nexport interface UserListResponseInterface {\n  \"users\": UserInterface[];\n  \"total\": number;\n  \"page\": number;\n  \"perPage\": number;\n}\n\n/**\n * Users List Tab Interface\n * This interface defines the structure of a users list tab object\n * @interface UsersListTabInterface\n * @property {0} 'odd' - Represents the odd users list tab\n * @property {1} 'even' - Represents the even users list tab\n */\nexport interface UsersListTabInterface {\n  0: 'odd';\n  1: 'even';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiService\n                            \n                            \n                                getUsersMessagesListRequestSubject\n                            \n                            \n                                navLinks\n                            \n                            \n                                pagination\n                            \n                            \n                                parentRouter\n                            \n                            \n                                router\n                            \n                            \n                                usersListEven\n                            \n                            \n                                usersListFull\n                            \n                            \n                                usersListOdd\n                            \n                            \n                                usersListTab\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUsersList\n                            \n                            \n                                getUsersMessagesList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/user.service.ts:35\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersList\n                        \n                    \n                \n            \n            \n                \ngetUsersList(param: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/user.service.ts:48\n                        \n                    \n\n\n            \n                \n                        Method for changing the users list tab.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event that contains the new tab index bind with EUserLisTypeTab.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersMessagesList\n                        \n                    \n                \n            \n            \n                \ngetUsersMessagesList(param: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/user.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ApiService)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/user.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersMessagesListRequestSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/user.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navLinks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() =>\n    [\n      {href: '/main', label: 'Main'},\n      {href: '/users-list/' + this.usersListTab().index, label: 'Users List'},\n      {href: '/full-users-list', label: 'Full Users List'}\n    ]\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/user.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pagination\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal({length: 1000, pageIndex: 0, pageSize: 15, previousPageIndex: 0})\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/user.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parentRouter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/user.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/user.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usersListEven\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/user.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usersListFull\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/user.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usersListOdd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/user.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usersListTab\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal({index: 0, tab: new MatTab()})\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/user.service.ts:21\n                        \n                    \n\n            \n                \n                    Signal with tab state for the users list tab.\ntype: MatTabChangeEvent\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import {computed, effect, inject, Injectable, signal} from '@angular/core';\nimport {MatTab, MatTabChangeEvent} from '@angular/material/tabs';\nimport {Router} from '@angular/router';\nimport {ApiService} from './api.service';\nimport {combineLatest, filter, map, Observable, Subject, takeUntil} from 'rxjs';\nimport {UserInterface} from '../interfaces/user-interface';\nimport {PageEvent} from '@angular/material/paginator';\nimport {CardInterface} from '../interfaces/card-interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  router = inject(Router);\n  apiService = inject(ApiService);\n\n  /**\n   * Signal with tab state for the users list tab.\n   * type: MatTabChangeEvent\n   */\n  usersListTab = signal({index: 0, tab: new MatTab()});\n  navLinks = computed(() =>\n    [\n      {href: '/main', label: 'Main'},\n      {href: '/users-list/' + this.usersListTab().index, label: 'Users List'},\n      {href: '/full-users-list', label: 'Full Users List'}\n    ]\n  );\n  usersListOdd = signal([]);\n  usersListEven = signal([]);\n  usersListFull = signal([]);\n  pagination = signal({length: 1000, pageIndex: 0, pageSize: 15, previousPageIndex: 0});\n  parentRouter = signal('');\n\n  getUsersMessagesListRequestSubject = new Subject();\n\n  constructor() {\n    effect(() => {\n      if (this.navLinks() && this.router.url.indexOf('users-list') >= 0) this.router.navigate(['/users-list/', this.usersListTab().index]);\n    });\n  }\n\n  /**\n   * Method for changing the users list tab.\n   * @param param - The event that contains the new tab index bind with EUserLisTypeTab.\n   * @returns Observable\n   */\n  getUsersList(param: {}): Observable {\n    return combineLatest([\n      this.apiService.getInternalUsers(param),\n      this.apiService.getOutsourceUsers(param)\n    ])\n      .pipe(\n        map((data: [UserInterface[], UserInterface[]]): UserInterface[] => {\n          let result: UserInterface[] = [];\n\n          if (this.pagination().pageIndex >= 1) {\n            result = data[0].sort(\n              (a, b) => a.id - b.id || a.name.localeCompare(b.name)\n            );\n          } else if (this.pagination().pageIndex = 0) {\n            result = [...data[0], ...data[1]].sort(\n              (a, b) => a.id - b.id || a.name.localeCompare(b.name)\n            );\n          }\n\n          return result;\n        })\n      );\n  }\n\n  getUsersMessagesList(param: {}): Observable {\n    // this.getUsersMessagesListRequestSubject.next();\n    console.log('log');\n\n    return combineLatest([\n      this.apiService.getInternalUsersMessage({}),\n      this.apiService.getOutsourceUsersMessage({})\n    ])\n      .pipe(\n        // takeUntil(this.getUsersMessagesListRequestSubject),\n        map((data: [CardInterface[], CardInterface[]]): CardInterface[] => {\n          return [...data[0], ...data[1]].sort(\n            (a, b) => a.id - b.id)\n        })\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersListComponent.html":{"url":"components/UsersListComponent.html","title":"component - UsersListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/users-list/users-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying a list of users.\nIt uses the UserService to fetch and manage user data,\nand displays the data in an accordion format with tabs for odd and even users.\nIt also handles pagination for the full list of users.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users-list\n            \n\n\n            \n                imports\n                \n                            AccordionComponent\n                            MatTabsModule\n                            MatPaginator\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./users-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./users-list.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataUserService\n                            \n                            \n                                    Private\n                                ngUnsubscribe\n                            \n                            \n                                router\n                            \n                            \n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                conditionForUsersListEven\n                            \n                            \n                                    Private\n                                conditionForUsersListFull\n                            \n                            \n                                    Private\n                                conditionForUsersListOdd\n                            \n                            \n                                fullListUsers\n                            \n                            \n                                getUserMessages\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onPagination\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/users-list/users-list.component.ts:57\n                            \n                        \n\n                \n                    \n                            Signal to get the current pagination state.\nIt is used to manage the pagination of the full users list.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        conditionForUsersListEven\n                        \n                    \n                \n            \n            \n                \n                        \n                    conditionForUsersListEven()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/users-list/users-list.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Checks if the current URL is for the even users list and if the list is empty.\nIf true, it triggers the fetching of the even users list.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nTrue if the conditions are met, false otherwise.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        conditionForUsersListFull\n                        \n                    \n                \n            \n            \n                \n                        \n                    conditionForUsersListFull()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/users-list/users-list.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Checks if the current URL is for the full users list and if the list is empty.\nIf true, it triggers the fetching of the full users list.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nTrue if the conditions are met, false otherwise.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        conditionForUsersListOdd\n                        \n                    \n                \n            \n            \n                \n                        \n                    conditionForUsersListOdd()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/users-list/users-list.component.ts:109\n                        \n                    \n\n\n            \n                \n                        Checks if the current URL is for the odd users list and if the list is empty.\nIf true, it triggers the fetching of the odd users list.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nTrue if the conditions are met, false otherwise.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fullListUsers\n                        \n                    \n                \n            \n            \n                \nfullListUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/users-list/users-list.component.ts:132\n                        \n                    \n\n\n            \n                \n                        Fetches the full list of users based on the current pagination state.\nIt updates the usersListFull signal with the fetched data.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserMessages\n                        \n                    \n                \n            \n            \n                \ngetUserMessages(data: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/users-list/users-list.component.ts:172\n                        \n                    \n\n\n            \n                \n                        Fetches user messages based on the provided data.\nIt updates the usersListFull, usersListOdd, and usersListEven signals with the fetched messages.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe identifier for the user whose messages are to be fetched.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/users-list/users-list.component.ts:194\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPagination\n                        \n                    \n                \n            \n            \n                \nonPagination(data: PageEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/users-list/users-list.component.ts:153\n                        \n                    \n\n\n            \n                \n                        Handles the pagination event.\nIt updates the pagination state in the userService and fetches the full list of users.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        PageEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe pagination event data containing pageIndex and pageSize.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dataUserService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DataUserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/users-list/users-list.component.ts:50\n                        \n                    \n\n            \n                \n                    Service to handle user data operations.\nThis service provides methods to update user lists based on messages received.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ngUnsubscribe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/users-list/users-list.component.ts:57\n                        \n                    \n\n            \n                \n                    Subject to manage unsubscription from observables.\nIt is used to prevent memory leaks by unsubscribing when the component is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/users-list/users-list.component.ts:44\n                        \n                    \n\n            \n                \n                    Router instance to navigate between routes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/users-list/users-list.component.ts:39\n                        \n                    \n\n            \n                \n                    Signal to get the full list of users.\nIt is computed based on the current pagination state and the URL.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, computed, effect, inject, OnDestroy, OnInit, signal} from '@angular/core';\nimport {AccordionComponent} from '../../../../projects/shared-components/src/lib/accordion/accordion.component';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatPaginator, PageEvent} from '@angular/material/paginator';\nimport {UserService} from '../../shared/services/user.service';\nimport {Router} from '@angular/router';\nimport {UserInterface} from '../../shared/interfaces/user-interface';\nimport {Subject, takeUntil} from 'rxjs';\nimport {EUserLisType, EUserLisTypeTab} from '../../shared/enums/user-enum';\nimport {DataUserService} from '../../shared/services/data-user.service';\n\n/**\n * Component for displaying a list of users.\n * It uses the UserService to fetch and manage user data,\n * and displays the data in an accordion format with tabs for odd and even users.\n * It also handles pagination for the full list of users.\n * @component\n * @selector app-users-list\n * @imports AccordionComponent, MatTabsModule, MatPaginator\n * @templateUrl ./users-list.component.html\n * @styleUrl ./users-list.component.scss\n * @implements OnDestroy\n */\n@Component({\n  selector: 'app-users-list',\n  imports: [\n    AccordionComponent,\n    MatTabsModule,\n    MatPaginator\n  ],\n  templateUrl: './users-list.component.html',\n  styleUrl: './users-list.component.scss'\n})\nexport class UsersListComponent implements OnDestroy {\n  /**\n   * Signal to get the full list of users.\n   * It is computed based on the current pagination state and the URL.\n   */\n  userService = inject(UserService);\n\n  /**\n   * Router instance to navigate between routes.\n   */\n  router = inject(Router);\n\n  /**\n   * Service to handle user data operations.\n   * This service provides methods to update user lists based on messages received.\n   */\n  dataUserService = inject(DataUserService);\n\n  /**\n   * Subject to manage unsubscription from observables.\n   * It is used to prevent memory leaks by unsubscribing when the component is destroyed.\n   * @private\n   */\n  private ngUnsubscribe: Subject = new Subject();\n\n  /**\n   * Signal to get the current pagination state.\n   * It is used to manage the pagination of the full users list.\n   */\n  constructor() {\n    effect(() => {\n      if (this.conditionForUsersListFull()) {\n        this.fullListUsers();\n      }\n    });\n    effect(() => {\n      if (this.conditionForUsersListOdd()) {\n        this.userService.getUsersList({type: EUserLisType.ODD})\n          .pipe(\n            takeUntil(this.ngUnsubscribe)\n          )\n          .subscribe(users => {\n            this.userService.usersListOdd.set(users);\n          });\n      }\n      if (this.conditionForUsersListEven()) {\n        this.userService.getUsersList({type: EUserLisType.EVEN})\n          .pipe(\n            takeUntil(this.ngUnsubscribe)\n          )\n          .subscribe((users: UserInterface[]) => {\n            this.userService.usersListEven.set(users);\n          });\n      }\n    });\n  }\n\n  /**\n   * Checks if the current URL is for the full users list and if the list is empty.\n   * If true, it triggers the fetching of the full users list.\n   * @returns {boolean} - True if the conditions are met, false otherwise.\n   * @private\n   */\n  private conditionForUsersListFull(): boolean {\n    return this.userService.pagination()\n      && this.router.url.indexOf('/full-users-list') >= 0\n      && this.userService.usersListFull().length === 0\n  }\n\n  /**\n   * Checks if the current URL is for the odd users list and if the list is empty.\n   * If true, it triggers the fetching of the odd users list.\n   * @returns {boolean} - True if the conditions are met, false otherwise.\n   * @private\n   */\n  private conditionForUsersListOdd(): boolean {\n    return this.userService.usersListTab().index === EUserLisTypeTab.ODD\n      && this.userService.usersListOdd().length === 0\n      && this.router.url.indexOf('/users-list') >= 0\n  }\n\n  /**\n   * Checks if the current URL is for the even users list and if the list is empty.\n   * If true, it triggers the fetching of the even users list.\n   * @returns {boolean} - True if the conditions are met, false otherwise.\n   * @private\n   */\n  private conditionForUsersListEven(): boolean {\n    return this.userService.usersListTab().index === EUserLisTypeTab.EVEN\n      && this.userService.usersListEven().length === 0\n      && this.router.url.indexOf('/users-list') >= 0\n  }\n\n  /**\n   * Fetches the full list of users based on the current pagination state.\n   * It updates the usersListFull signal with the fetched data.\n   * @returns {void}\n   */\n  fullListUsers() {\n    this.userService.getUsersList(\n      {\n        type: EUserLisType.FULL,\n        page: this.userService.pagination().pageIndex,\n        size: this.userService.pagination().pageSize\n      }\n    )\n      .pipe(\n        takeUntil(this.ngUnsubscribe)\n      )\n      .subscribe((users: UserInterface[]) => {\n        this.userService.usersListFull.set(users);\n      });\n  }\n\n  /**\n   * Handles the pagination event.\n   * It updates the pagination state in the userService and fetches the full list of users.\n   * @param {PageEvent} data - The pagination event data containing pageIndex and pageSize.\n   */\n  onPagination(data: PageEvent) {\n    if (this.userService.pagination().pageIndex !== data.pageIndex\n      || this.userService.pagination().pageSize !== data.pageSize) {\n      this.userService.pagination.update(pldData => {\n        return {\n          ...pldData,\n          pageIndex: data.pageIndex,\n          pageSize: data.pageSize\n        };\n      });\n      this.fullListUsers();\n    }\n  }\n\n  /**\n   * Fetches user messages based on the provided data.\n   * It updates the usersListFull, usersListOdd, and usersListEven signals with the fetched messages.\n   * @param {number} data - The identifier for the user whose messages are to be fetched.\n   */\n  getUserMessages(data: number) {\n    this.userService.getUsersMessagesListRequestSubject.next();\n\n    this.userService.getUsersMessagesList({})\n      .pipe(\n        takeUntil(this.ngUnsubscribe),\n        takeUntil(this.userService.getUsersMessagesListRequestSubject)\n      )\n      .subscribe(result => {\n        this.userService.usersListFull.update(users => {\n          return this.dataUserService.updateUserLists(users, data, result);\n        });\n        this.userService.usersListOdd.update(users => {\n          return this.dataUserService.updateUserLists(users, data, result);\n        });\n        this.userService.usersListEven.update(users => {\n          return this.dataUserService.updateUserLists(users, data, result);\n        });\n\n      })\n  }\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n\n    \n\n    \n        @if (router.url.indexOf('full-users-list') \n    \n      \n    \n    \n      \n    \n  \n} @else {\n  \n  \n  \n}\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (router.url.indexOf(\\'full-users-list\\')                               } @else {      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'UsersListComponent', 'selector': 'app-users-list'}];\n    var DIRECTIVES = [{'name': 'NavigationLinkDirective', 'selector': 'a[appNavigationLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsersListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UsersListTabInterface.html":{"url":"interfaces/UsersListTabInterface.html","title":"interface - UsersListTabInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UsersListTabInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/user-interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Users List Tab Interface\nThis interface defines the structure of a users list tab object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            0\n                                        \n                                \n                                \n                                        \n                                            1\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        0\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        0:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        1:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {CardInterface} from './card-interface';\n\n/**\n * User Interface\n * This interface defines the structure of a user object\n * @interface UserInterface\n * @property {number} id - The unique identifier for the user\n * @property {string} name - The full name of the user\n * @property {string} username - The username of the user\n * @property {string} email - The email address of the user\n * @property {UserAddressInterface} address - The address of the user, structured as a UserAddressInterface\n * @property {string} phone - The phone number of the user\n * @property {string} website - The website of the user\n * @property {UserCompanyInterface} company - The company information of the user, structured as a UserCompanyInterface\n */\nexport interface UserInterface {\n  \"id\": number,\n  \"name\": string,\n  \"username\": string,\n  \"email\": string,\n  \"address\": UserAddressInterface,\n  \"phone\": string,\n  \"website\": string,\n  \"company\": UserCompanyInterface,\n  \"messages\": CardInterface[]\n}\n\n/**\n * User Address Interface\n * This interface defines the structure of a user's address object\n * @interface UserAddressInterface\n * @property {string} street - The street address of the user\n * @property {string} suite - The suite or apartment number of the user\n * @property {string} city - The city where the user resides\n * @property {string} zipcode - The postal code of the user's address\n * @property {UserAddressGeoInterface} geo - The geographical coordinates of the user's address\n */\nexport interface UserAddressInterface {\n  \"street\": string,\n  \"suite\": string,\n  \"city\": string,\n  \"zipcode\": string,\n  \"geo\": UserAddressGeoInterface\n}\n\n/**\n * User Address Geo Interface\n * This interface defines the structure of a user's address geo object\n * @interface UserAddressGeoInterface\n * @property {string} lat - The latitude of the address\n * @property {string} lng - The longitude of the address\n */\nexport interface UserAddressGeoInterface {\n  \"lat\": string,\n  \"lng\": string\n}\n\n/**\n * User Company Interface\n * This interface defines the structure of a user's company object\n * @interface UserCompanyInterface\n * @property {string} name - The name of the company\n * @property {string} catchPhrase - A catchphrase for the company\n * @property {string} bs - A business slogan or description\n */\nexport interface UserCompanyInterface {\n  \"name\": string,\n  \"catchPhrase\": string,\n  \"bs\": string\n}\n\n/**\n * User List Response Interface\n * This interface defines the structure of a response containing a list of users\n * @interface UserListResponseInterface\n * @property {UserInterface[]} users - An array of UserInterface objects representing the users\n * @property {number} total - The total number of users\n * @property {number} page - The current page number\n * @property {number} perPage - The number of users per page\n */\nexport interface UserListResponseInterface {\n  \"users\": UserInterface[];\n  \"total\": number;\n  \"page\": number;\n  \"perPage\": number;\n}\n\n/**\n * Users List Tab Interface\n * This interface defines the structure of a users list tab object\n * @interface UsersListTabInterface\n * @property {0} 'odd' - Represents the odd users list tab\n * @property {1} 'even' - Represents the even users list tab\n */\nexport interface UsersListTabInterface {\n  0: 'odd';\n  1: 'even';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/main/main.component.ts\n            \n            component\n            MainComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/users-list/users-list.component.ts\n            \n            component\n            UsersListComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/shared/directives/navigation-link.directive.ts\n            \n            directive\n            NavigationLinkDirective\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/shared/interceptors/user-api.interceptor.ts\n            \n            variable\n            userApiInterceptor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/card-interface.ts\n            \n            interface\n            CardInterface\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/user-interface.ts\n            \n            interface\n            UserAddressGeoInterface\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/user-interface.ts\n            \n            interface\n            UserAddressInterface\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/user-interface.ts\n            \n            interface\n            UserCompanyInterface\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/user-interface.ts\n            \n            interface\n            UserInterface\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/user-interface.ts\n            \n            interface\n            UserListResponseInterface\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/user-interface.ts\n            \n            interface\n            UsersListTabInterface\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/shared/services/base-api.service.ts\n            \n            injectable\n            BaseApiService\n            \n                76 %\n                (10/13)\n            \n        \n        \n            \n                \n                src/app/shared/services/base-api.service.ts\n            \n            interface\n            IRequestParameters\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/data-user.service.ts\n            \n            injectable\n            DataUserService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                14 %\n                (2/14)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ^19.2.18\n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/material : ^19.2.18\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            log-symbols : \n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EUserAPI   (src/.../user-enum.ts)\n                        \n                        \n                            EUserLisType   (src/.../user-enum.ts)\n                        \n                        \n                            EUserLisTypeTab   (src/.../user-enum.ts)\n                        \n                        \n                            EUserMessageAPI   (src/.../user-enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/enums/user-enum.ts\n    \n        \n            \n                \n                    \n                        \n                        EUserAPI\n                    \n                \n                    \n                        \n                            This enum defines the endpoints for fetching user data from both internal and external sources.\n\n                        \n                    \n                        \n                            \n                                 INTERNALSORCE\n                            \n                        \n                        \n                            \n                                Value : /data/users.json\n                            \n                        \n                        \n                            \n                                 OUTSOURCE\n                            \n                        \n                        \n                            \n                                Value : https://jsonplaceholder.typicode.com/users\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        EUserLisType\n                    \n                \n                        \n                            \n                                 ODD\n                            \n                        \n                        \n                            \n                                Value : odd\n                            \n                        \n                        \n                            \n                                 EVEN\n                            \n                        \n                        \n                            \n                                Value : even\n                            \n                        \n                        \n                            \n                                 FULL\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        EUserLisTypeTab\n                    \n                \n                        \n                            \n                                 ODD\n                            \n                        \n                        \n                            \n                                 EVEN\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        EUserMessageAPI\n                    \n                \n                    \n                        \n                            This enum defines the endpoints for fetching user messages from both internal and external sources.\n\n                        \n                    \n                        \n                            \n                                 INTERNALSORCE\n                            \n                        \n                        \n                            \n                                Value : /data/posts.json\n                            \n                        \n                        \n                            \n                                 OUTSOURCE\n                            \n                        \n                        \n                            \n                                Value : https://jsonplaceholder.typicode.com/posts\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontEndIvanti\nThis project was generated using Angular CLI version 19.2.14.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nDocumentation\nProject documentation is generated using Compodoc. To generate the documentation, run:\nExample :npm run compodoc\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            userApiInterceptor   (src/.../user-api.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({eventCoalescing: true}),\n    provideRouter(\n      routes,\n      withComponentInputBinding(),\n      withRouterConfig({paramsInheritanceStrategy: 'always'}),\n    ),\n    provideHttpClient(),\n    provideHttpClient(\n      withInterceptors(\n        [\n          userApiInterceptor\n        ]\n      ))\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/interceptors/user-api.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userApiInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  let type = req.params.get('type');\n  let page: number = +(req.params.get('page') || '0') + 1;\n  let size: number = +(req.params.get('size') || '15');\n\n  return next(req)\n    .pipe(\n      map((response) => {\n        if (req.url.indexOf('users') >= 0 && response instanceof HttpResponse && response.body && Array.isArray(response.body)) {\n          let value: (UserInterface | null)[] = response.body as UserInterface[];\n\n          if (type === EUserLisType.ODD) {\n            value = value.filter(m => (m as UserInterface).id  (m as UserInterface).id  (m as UserInterface).id  1) {\n              value = value.filter((m) => (m as UserInterface).id >= ((size * page) - size));\n            }\n          }\n          response = response.clone({body: value});\n        }\n        return response;\n      }),\n      // delayWhen(() => timer(4000))\n    );\n}\n                    \n                \n\n            \n                \n                    Interceptor for filtering users based on type and pagination.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
